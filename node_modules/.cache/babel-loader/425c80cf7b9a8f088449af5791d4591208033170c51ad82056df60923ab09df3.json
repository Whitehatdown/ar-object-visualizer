{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyPC\\\\Projects\\\\Parijat Controlwares\\\\AR Tags'\\\\ar-object-visualizer\\\\src\\\\ARVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { sampleObjects } from './sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImprovedARVisualizer = () => {\n  _s();\n  const mountRef = useRef(null);\n  const videoRef = useRef(null);\n  const [objects, setObjects] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [showDataPanel, setShowDataPanel] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [videoStream, setVideoStream] = useState(null);\n  const [deviceOrientation, setDeviceOrientation] = useState({\n    alpha: 0,\n    beta: 0,\n    gamma: 0\n  });\n  const [deviceMotion, setDeviceMotion] = useState({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n\n  // Request camera access immediately on component mount\n  useEffect(() => {\n    requestCameraAccess();\n\n    // Request permission for device orientation if on iOS 13+\n    if (typeof DeviceOrientationEvent !== 'undefined' && typeof DeviceOrientationEvent.requestPermission === 'function') {\n      // iOS 13+ requires explicit permission\n      DeviceOrientationEvent.requestPermission().then(response => {\n        if (response === 'granted') {\n          window.addEventListener('deviceorientation', handleOrientation);\n          window.addEventListener('devicemotion', handleMotion);\n        }\n      }).catch(console.error);\n    } else {\n      // Non iOS 13+ devices\n      window.addEventListener('deviceorientation', handleOrientation);\n      window.addEventListener('devicemotion', handleMotion);\n    }\n    return () => {\n      window.removeEventListener('deviceorientation', handleOrientation);\n      window.removeEventListener('devicemotion', handleMotion);\n    };\n  }, []);\n\n  // Handle device orientation changes\n  const handleOrientation = event => {\n    setDeviceOrientation({\n      alpha: event.alpha || 0,\n      // Z-axis rotation [0, 360)\n      beta: event.beta || 0,\n      // X-axis rotation [-180, 180)\n      gamma: event.gamma || 0 // Y-axis rotation [-90, 90)\n    });\n  };\n\n  // Handle device motion\n  const handleMotion = event => {\n    const acceleration = event.accelerationIncludingGravity;\n    if (acceleration) {\n      setDeviceMotion({\n        x: acceleration.x || 0,\n        y: acceleration.y || 0,\n        z: acceleration.z || 0\n      });\n    }\n  };\n\n  // Request camera access\n  const requestCameraAccess = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\",\n          width: {\n            ideal: window.innerWidth\n          },\n          height: {\n            ideal: window.innerHeight\n          }\n        }\n      });\n      setVideoStream(stream);\n      setCameraActive(true);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      alert(\"Could not access the camera. Please check permissions.\");\n    }\n  };\n\n  // Stop camera stream\n  const stopCameraStream = () => {\n    if (videoStream) {\n      videoStream.getTracks().forEach(track => track.stop());\n      setVideoStream(null);\n      setCameraActive(false);\n    }\n  };\n\n  // Scene setup\n  useEffect(() => {\n    if (!cameraActive) return;\n\n    // Scene, camera, and renderer setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 0, 5); // Start position\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true // Transparent background to see camera feed\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // Transparent background\n\n    // Add renderer to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n\n    // Subtle grid for depth perception\n    const gridHelper = new THREE.GridHelper(20, 20, 0x555555, 0x333333);\n    gridHelper.position.y = -2; // Place grid below eye level\n    gridHelper.material.opacity = 0.4;\n    gridHelper.material.transparent = true;\n    scene.add(gridHelper);\n\n    // Create fixed AR objects in the scene\n    const objectsInScene = [];\n    sampleObjects.forEach(objectData => {\n      // Create marker mesh with higher quality\n      const geometry = new THREE.SphereGeometry(0.2, 32, 32);\n      const material = new THREE.MeshStandardMaterial({\n        color: objectData.color,\n        emissive: objectData.color,\n        emissiveIntensity: 0.4,\n        roughness: 0.3,\n        metalness: 0.8\n      });\n      const mesh = new THREE.Mesh(geometry, material);\n\n      // Position in a fixed location around the user\n      // Distribute objects in a circle around the camera\n      const angle = Math.random() * Math.PI * 2;\n      const radius = 3 + Math.random() * 2; // Random distance between 3-5 units\n      const x = Math.cos(angle) * radius;\n      const z = Math.sin(angle) * radius;\n      const y = (Math.random() - 0.5) * 2; // Random height\n\n      mesh.position.set(x, y, z);\n\n      // Add enhanced pulse effect\n      const pulseGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n      const pulseMaterial = new THREE.MeshBasicMaterial({\n        color: objectData.color,\n        transparent: true,\n        opacity: 0.4\n      });\n      const pulse = new THREE.Mesh(pulseGeometry, pulseMaterial);\n      pulse.scale.set(1, 1, 1);\n\n      // Set pulse properties based on status\n      let pulseSpeed = 0.01;\n      let maxScale = 1.5;\n      switch (objectData.status) {\n        case \"Critical\":\n          pulseSpeed = 0.03;\n          maxScale = 2.0;\n          break;\n        case \"Warning\":\n          pulseSpeed = 0.02;\n          maxScale = 1.8;\n          break;\n        case \"Offline\":\n          pulseSpeed = 0.005;\n          maxScale = 1.2;\n          break;\n        default:\n          // Active\n          pulseSpeed = 0.01;\n          maxScale = 1.5;\n      }\n      pulse.userData = {\n        pulseDirection: 1,\n        minScale: 1,\n        maxScale: maxScale,\n        pulseSpeed: pulseSpeed\n      };\n      mesh.add(pulse);\n\n      // Add floating status indicator\n      const statusGeometry = new THREE.BoxGeometry(0.05, 0.05, 0.05);\n      const statusColor = getStatusColor(objectData.status);\n      const statusMaterial = new THREE.MeshBasicMaterial({\n        color: statusColor\n      });\n      const statusIndicator = new THREE.Mesh(statusGeometry, statusMaterial);\n      statusIndicator.position.set(0, 0.3, 0);\n      mesh.add(statusIndicator);\n\n      // Add label\n      const labelDiv = document.createElement('div');\n      labelDiv.className = 'object-label';\n      labelDiv.textContent = objectData.name;\n      labelDiv.style.display = 'none';\n\n      // Create a text sprite for the 3D label\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      canvas.width = 256;\n      canvas.height = 128;\n      context.fillStyle = 'rgba(25, 28, 36, 0.85)';\n      context.strokeStyle = 'rgba(255, 255, 255, 0.2)';\n      context.lineWidth = 2;\n\n      // Draw rounded rectangle\n      const rectWidth = 210;\n      const rectHeight = 50;\n      const cornerRadius = 8;\n      context.beginPath();\n      context.moveTo(20 + cornerRadius, 10);\n      context.lineTo(20 + rectWidth - cornerRadius, 10);\n      context.quadraticCurveTo(20 + rectWidth, 10, 20 + rectWidth, 10 + cornerRadius);\n      context.lineTo(20 + rectWidth, 10 + rectHeight - cornerRadius);\n      context.quadraticCurveTo(20 + rectWidth, 10 + rectHeight, 20 + rectWidth - cornerRadius, 10 + rectHeight);\n      context.lineTo(20 + cornerRadius, 10 + rectHeight);\n      context.quadraticCurveTo(20, 10 + rectHeight, 20, 10 + rectHeight - cornerRadius);\n      context.lineTo(20, 10 + cornerRadius);\n      context.quadraticCurveTo(20, 10, 20 + cornerRadius, 10);\n      context.closePath();\n      context.fill();\n      context.stroke();\n\n      // Add text\n      context.font = 'bold 20px Arial';\n      context.fillStyle = 'white';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillText(objectData.name, canvas.width / 2, 35);\n\n      // Create sprite\n      const texture = new THREE.CanvasTexture(canvas);\n      const spriteMaterial = new THREE.SpriteMaterial({\n        map: texture,\n        transparent: true\n      });\n      const sprite = new THREE.Sprite(spriteMaterial);\n      sprite.scale.set(1.0, 0.5, 1);\n      sprite.position.set(0, 0.5, 0);\n      sprite.visible = false; // Hidden by default\n      mesh.add(sprite);\n\n      // Store the object with its metadata\n      const objectWithMeta = {\n        mesh,\n        data: objectData,\n        label: labelDiv,\n        sprite\n      };\n      scene.add(mesh);\n      objectsInScene.push(objectWithMeta);\n    });\n    setObjects(objectsInScene);\n\n    // Helper function to get status color\n    function getStatusColor(status) {\n      switch (status) {\n        case \"Critical\":\n          return 0xff0000;\n        case \"Warning\":\n          return 0xffcc00;\n        case \"Offline\":\n          return 0x888888;\n        default:\n          return 0x00ff00;\n        // Active\n      }\n    }\n\n    // Raycaster for object selection\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n\n    // Handle tap/click\n    const handleTap = event => {\n      // Normalize mouse/touch coordinates\n      const x = event.clientX / window.innerWidth * 2 - 1;\n      const y = -(event.clientY / window.innerHeight) * 2 + 1;\n      mouse.set(x, y);\n\n      // Update the raycaster\n      raycaster.setFromCamera(mouse, camera);\n\n      // Find intersections\n      const meshes = objectsInScene.map(obj => obj.mesh);\n      const intersects = raycaster.intersectObjects(meshes, true);\n\n      // If we intersected with something\n      if (intersects.length > 0) {\n        // Get the root parent object (in case we hit a child like pulse)\n        let selectedMesh = intersects[0].object;\n        while (selectedMesh.parent && selectedMesh.parent !== scene) {\n          selectedMesh = selectedMesh.parent;\n        }\n        const selectedObj = objectsInScene.find(obj => obj.mesh === selectedMesh);\n        if (selectedObj) {\n          if (selectedObject === selectedObj) {\n            // Toggle data panel if tapping the same object\n            setShowDataPanel(!showDataPanel);\n          } else {\n            // Select new object and show data panel\n            setSelectedObject(selectedObj);\n            setShowDataPanel(true);\n          }\n\n          // Hide all sprites\n          objectsInScene.forEach(obj => {\n            if (obj.sprite) obj.sprite.visible = false;\n          });\n\n          // Show sprite for selected object\n          selectedObj.sprite.visible = true;\n        }\n      } else {\n        // Hide data panel but keep selection\n        setShowDataPanel(false);\n\n        // Hide all sprite labels when tapping on empty space\n        objectsInScene.forEach(obj => {\n          if (obj.sprite) obj.sprite.visible = false;\n        });\n      }\n    };\n\n    // Handle device orientation to update camera view\n    const updateCameraFromOrientation = () => {\n      // This is a simplified calculation and might need calibration\n      // depending on device and desired behavior\n\n      // Only apply rotation if we have significant movement\n      if (deviceOrientation.alpha !== 0 || deviceOrientation.beta !== 0 || deviceOrientation.gamma !== 0) {\n        // Create a rotation matrix from device orientation\n        const euler = new THREE.Euler(THREE.MathUtils.degToRad(deviceOrientation.beta), THREE.MathUtils.degToRad(deviceOrientation.alpha), -THREE.MathUtils.degToRad(deviceOrientation.gamma), 'YXZ' // Order matters for rotation\n        );\n        camera.setRotationFromEuler(euler);\n      }\n    };\n\n    // Setup event listeners\n    window.addEventListener('click', handleTap);\n    window.addEventListener('touchend', e => handleTap(e.changedTouches[0]));\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Animation loop\n    const animate = () => {\n      const animationId = requestAnimationFrame(animate);\n\n      // Update camera based on device orientation\n      updateCameraFromOrientation();\n\n      // Update pulse animations\n      objectsInScene.forEach(obj => {\n        const pulse = obj.mesh.children[0];\n\n        // Get pulse speed from userData\n        const pulseSpeed = pulse.userData.pulseSpeed;\n\n        // Update pulse scale\n        if (pulse.userData.pulseDirection === 1) {\n          pulse.scale.x += pulseSpeed;\n          pulse.scale.y += pulseSpeed;\n          pulse.scale.z += pulseSpeed;\n          if (pulse.scale.x >= pulse.userData.maxScale) {\n            pulse.userData.pulseDirection = -1;\n          }\n        } else {\n          pulse.scale.x -= pulseSpeed;\n          pulse.scale.y -= pulseSpeed;\n          pulse.scale.z -= pulseSpeed;\n          if (pulse.scale.x <= pulse.userData.minScale) {\n            pulse.userData.pulseDirection = 1;\n          }\n        }\n\n        // Update opacity based on scale\n        pulse.material.opacity = 0.5 - (pulse.scale.x - pulse.userData.minScale) / (pulse.userData.maxScale - pulse.userData.minScale) * 0.4;\n\n        // Rotate status indicators slightly\n        if (obj.mesh.children.length > 1) {\n          obj.mesh.children[1].rotation.y += 0.01;\n        }\n\n        // Make sprite labels always face camera\n        if (obj.sprite) {\n          obj.sprite.lookAt(camera.position);\n        }\n      });\n      renderer.render(scene, camera);\n    };\n    const animationId = requestAnimationFrame(animate);\n\n    // Add HTML overlays to the DOM\n    objectsInScene.forEach(obj => {\n      document.body.appendChild(obj.label);\n    });\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('click', handleTap);\n      window.removeEventListener('touchend', handleTap);\n      window.removeEventListener('resize', handleResize);\n      cancelAnimationFrame(animationId);\n      objectsInScene.forEach(obj => {\n        if (obj.label.parentNode) {\n          obj.label.parentNode.removeChild(obj.label);\n        }\n      });\n      if (mountRef.current && mountRef.current.contains(renderer.domElement)) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, [cameraActive, deviceOrientation, selectedObject]);\n\n  // Format date string nicely\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get status indicator color\n  const getStatusClass = status => {\n    switch (status) {\n      case \"Critical\":\n        return \"status-critical\";\n      case \"Warning\":\n        return \"status-warning\";\n      case \"Offline\":\n        return \"status-offline\";\n      default:\n        return \"status-active\";\n    }\n  };\n\n  // Render enhanced card-style data panel\n  const renderDataPanel = () => {\n    if (!selectedObject || !showDataPanel) return null;\n    const {\n      data\n    } = selectedObject;\n    const statusClass = getStatusClass(data.status);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-panel card-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        style: {\n          backgroundColor: `#${data.color.toString(16)}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${statusClass}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowDataPanel(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section location-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"X:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [selectedObject.mesh.position.x.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Y:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [selectedObject.mesh.position.y.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 501,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Z:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [selectedObject.mesh.position.z.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section properties-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: data.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `data-value ${statusClass}`,\n                  children: data.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell full-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Last Updated:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: formatDate(data.lastUpdated)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell full-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 530,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value description\",\n                  children: data.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section readings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Readings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mini-chart\",\n              children: data.readings.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar\",\n                style: {\n                  height: `${value}%`,\n                  backgroundColor: index === data.readings.length - 1 ? `#${data.color.toString(16)}` : '#3498db'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltip\",\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-legend\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Past\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render AR mode instructions\n  const renderInstructions = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions card-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Look around to find virtual objects. Tap objects to view details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dismiss-button\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render simple status bar\n  const renderStatusBar = () => {\n    const activeObjects = objects.filter(obj => obj.data.status === \"Active\").length;\n    const warningObjects = objects.filter(obj => obj.data.status === \"Warning\").length;\n    const criticalObjects = objects.filter(obj => obj.data.status === \"Critical\").length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar card-ui\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"object-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: objects.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Objects\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: activeObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: warningObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-critical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: criticalObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"camera-feed\",\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"ar-scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui-layer\",\n      children: [renderDataPanel(), renderStatusBar(), renderInstructions(), !cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-permissions card-ui\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Camera Access Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This AR application needs access to your camera to function.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"permission-button\",\n          onClick: requestCameraAccess,\n          children: \"Grant Camera Access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 622,\n    columnNumber: 5\n  }, this);\n};\n_s(ImprovedARVisualizer, \"8rSc2CZtWk8GbK83A6V2UojvsKI=\");\n_c = ImprovedARVisualizer;\nexport default ImprovedARVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ImprovedARVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","sampleObjects","jsxDEV","_jsxDEV","ImprovedARVisualizer","_s","mountRef","videoRef","objects","setObjects","selectedObject","setSelectedObject","showDataPanel","setShowDataPanel","cameraActive","setCameraActive","videoStream","setVideoStream","deviceOrientation","setDeviceOrientation","alpha","beta","gamma","deviceMotion","setDeviceMotion","x","y","z","requestCameraAccess","DeviceOrientationEvent","requestPermission","then","response","window","addEventListener","handleOrientation","handleMotion","catch","console","error","removeEventListener","event","acceleration","accelerationIncludingGravity","stream","navigator","mediaDevices","getUserMedia","video","facingMode","width","ideal","innerWidth","height","innerHeight","current","srcObject","alert","stopCameraStream","getTracks","forEach","track","stop","scene","Scene","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","gridHelper","GridHelper","material","opacity","transparent","objectsInScene","objectData","geometry","SphereGeometry","MeshStandardMaterial","color","emissive","emissiveIntensity","roughness","metalness","mesh","Mesh","angle","Math","random","PI","radius","cos","sin","pulseGeometry","pulseMaterial","MeshBasicMaterial","pulse","scale","pulseSpeed","maxScale","status","userData","pulseDirection","minScale","statusGeometry","BoxGeometry","statusColor","getStatusColor","statusMaterial","statusIndicator","labelDiv","document","createElement","className","textContent","name","style","display","canvas","context","getContext","fillStyle","strokeStyle","lineWidth","rectWidth","rectHeight","cornerRadius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","stroke","font","textAlign","textBaseline","fillText","texture","CanvasTexture","spriteMaterial","SpriteMaterial","map","sprite","Sprite","visible","objectWithMeta","data","label","push","raycaster","Raycaster","mouse","Vector2","handleTap","clientX","clientY","setFromCamera","meshes","obj","intersects","intersectObjects","length","selectedMesh","object","parent","selectedObj","find","updateCameraFromOrientation","euler","Euler","MathUtils","degToRad","setRotationFromEuler","e","changedTouches","handleResize","aspect","updateProjectionMatrix","animate","animationId","requestAnimationFrame","children","rotation","lookAt","render","body","cancelAnimationFrame","parentNode","removeChild","contains","formatDate","dateString","date","Date","toLocaleString","getStatusClass","renderDataPanel","statusClass","backgroundColor","toString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","type","lastUpdated","description","readings","value","index","renderInstructions","renderStatusBar","activeObjects","filter","warningObjects","criticalObjects","ref","autoPlay","playsInline","muted","_c","$RefreshReg$"],"sources":["C:/MyPC/Projects/Parijat Controlwares/AR Tags'/ar-object-visualizer/src/ARVisualizer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { sampleObjects } from './sampleData';\r\n\r\nconst ImprovedARVisualizer = () => {\r\n  const mountRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [objects, setObjects] = useState([]);\r\n  const [selectedObject, setSelectedObject] = useState(null);\r\n  const [showDataPanel, setShowDataPanel] = useState(false);\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [deviceOrientation, setDeviceOrientation] = useState({ alpha: 0, beta: 0, gamma: 0 });\r\n  const [deviceMotion, setDeviceMotion] = useState({ x: 0, y: 0, z: 0 });\r\n  \r\n  // Request camera access immediately on component mount\r\n  useEffect(() => {\r\n    requestCameraAccess();\r\n    \r\n    // Request permission for device orientation if on iOS 13+\r\n    if (typeof DeviceOrientationEvent !== 'undefined' && \r\n        typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n      // iOS 13+ requires explicit permission\r\n      DeviceOrientationEvent.requestPermission()\r\n        .then(response => {\r\n          if (response === 'granted') {\r\n            window.addEventListener('deviceorientation', handleOrientation);\r\n            window.addEventListener('devicemotion', handleMotion);\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      // Non iOS 13+ devices\r\n      window.addEventListener('deviceorientation', handleOrientation);\r\n      window.addEventListener('devicemotion', handleMotion);\r\n    }\r\n    \r\n    return () => {\r\n      window.removeEventListener('deviceorientation', handleOrientation);\r\n      window.removeEventListener('devicemotion', handleMotion);\r\n    };\r\n  }, []);\r\n  \r\n  // Handle device orientation changes\r\n  const handleOrientation = (event) => {\r\n    setDeviceOrientation({\r\n      alpha: event.alpha || 0, // Z-axis rotation [0, 360)\r\n      beta: event.beta || 0,   // X-axis rotation [-180, 180)\r\n      gamma: event.gamma || 0  // Y-axis rotation [-90, 90)\r\n    });\r\n  };\r\n  \r\n  // Handle device motion\r\n  const handleMotion = (event) => {\r\n    const acceleration = event.accelerationIncludingGravity;\r\n    if (acceleration) {\r\n      setDeviceMotion({\r\n        x: acceleration.x || 0,\r\n        y: acceleration.y || 0,\r\n        z: acceleration.z || 0\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Request camera access\r\n  const requestCameraAccess = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { \r\n          facingMode: \"environment\",\r\n          width: { ideal: window.innerWidth },\r\n          height: { ideal: window.innerHeight }\r\n        } \r\n      });\r\n      \r\n      setVideoStream(stream);\r\n      setCameraActive(true);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n      alert(\"Could not access the camera. Please check permissions.\");\r\n    }\r\n  };\r\n  \r\n  // Stop camera stream\r\n  const stopCameraStream = () => {\r\n    if (videoStream) {\r\n      videoStream.getTracks().forEach(track => track.stop());\r\n      setVideoStream(null);\r\n      setCameraActive(false);\r\n    }\r\n  };\r\n  \r\n  // Scene setup\r\n  useEffect(() => {\r\n    if (!cameraActive) return;\r\n    \r\n    // Scene, camera, and renderer setup\r\n    const scene = new THREE.Scene();\r\n    \r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, \r\n      window.innerWidth / window.innerHeight, \r\n      0.1, \r\n      1000\r\n    );\r\n    camera.position.set(0, 0, 5); // Start position\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true,\r\n      alpha: true // Transparent background to see camera feed\r\n    });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setClearColor(0x000000, 0); // Transparent background\r\n    \r\n    // Add renderer to DOM\r\n    mountRef.current.appendChild(renderer.domElement);\r\n    \r\n    // Lighting\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(1, 1, 1);\r\n    scene.add(directionalLight);\r\n    \r\n    // Subtle grid for depth perception\r\n    const gridHelper = new THREE.GridHelper(20, 20, 0x555555, 0x333333);\r\n    gridHelper.position.y = -2; // Place grid below eye level\r\n    gridHelper.material.opacity = 0.4;\r\n    gridHelper.material.transparent = true;\r\n    scene.add(gridHelper);\r\n    \r\n    // Create fixed AR objects in the scene\r\n    const objectsInScene = [];\r\n    \r\n    sampleObjects.forEach(objectData => {\r\n      // Create marker mesh with higher quality\r\n      const geometry = new THREE.SphereGeometry(0.2, 32, 32);\r\n      const material = new THREE.MeshStandardMaterial({ \r\n        color: objectData.color,\r\n        emissive: objectData.color,\r\n        emissiveIntensity: 0.4,\r\n        roughness: 0.3,\r\n        metalness: 0.8\r\n      });\r\n      const mesh = new THREE.Mesh(geometry, material);\r\n      \r\n      // Position in a fixed location around the user\r\n      // Distribute objects in a circle around the camera\r\n      const angle = Math.random() * Math.PI * 2;\r\n      const radius = 3 + Math.random() * 2; // Random distance between 3-5 units\r\n      const x = Math.cos(angle) * radius;\r\n      const z = Math.sin(angle) * radius;\r\n      const y = (Math.random() - 0.5) * 2; // Random height\r\n      \r\n      mesh.position.set(x, y, z);\r\n      \r\n      // Add enhanced pulse effect\r\n      const pulseGeometry = new THREE.SphereGeometry(0.25, 32, 32);\r\n      const pulseMaterial = new THREE.MeshBasicMaterial({\r\n        color: objectData.color,\r\n        transparent: true,\r\n        opacity: 0.4\r\n      });\r\n      const pulse = new THREE.Mesh(pulseGeometry, pulseMaterial);\r\n      pulse.scale.set(1, 1, 1);\r\n      \r\n      // Set pulse properties based on status\r\n      let pulseSpeed = 0.01;\r\n      let maxScale = 1.5;\r\n      \r\n      switch(objectData.status) {\r\n        case \"Critical\":\r\n          pulseSpeed = 0.03;\r\n          maxScale = 2.0;\r\n          break;\r\n        case \"Warning\":\r\n          pulseSpeed = 0.02;\r\n          maxScale = 1.8;\r\n          break;\r\n        case \"Offline\":\r\n          pulseSpeed = 0.005;\r\n          maxScale = 1.2;\r\n          break;\r\n        default: // Active\r\n          pulseSpeed = 0.01;\r\n          maxScale = 1.5;\r\n      }\r\n      \r\n      pulse.userData = { \r\n        pulseDirection: 1, \r\n        minScale: 1, \r\n        maxScale: maxScale,\r\n        pulseSpeed: pulseSpeed\r\n      };\r\n      mesh.add(pulse);\r\n      \r\n      // Add floating status indicator\r\n      const statusGeometry = new THREE.BoxGeometry(0.05, 0.05, 0.05);\r\n      const statusColor = getStatusColor(objectData.status);\r\n      const statusMaterial = new THREE.MeshBasicMaterial({ color: statusColor });\r\n      const statusIndicator = new THREE.Mesh(statusGeometry, statusMaterial);\r\n      statusIndicator.position.set(0, 0.3, 0);\r\n      mesh.add(statusIndicator);\r\n      \r\n      // Add label\r\n      const labelDiv = document.createElement('div');\r\n      labelDiv.className = 'object-label';\r\n      labelDiv.textContent = objectData.name;\r\n      labelDiv.style.display = 'none';\r\n      \r\n      // Create a text sprite for the 3D label\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      canvas.width = 256;\r\n      canvas.height = 128;\r\n      \r\n      context.fillStyle = 'rgba(25, 28, 36, 0.85)';\r\n      context.strokeStyle = 'rgba(255, 255, 255, 0.2)';\r\n      context.lineWidth = 2;\r\n      \r\n      // Draw rounded rectangle\r\n      const rectWidth = 210;\r\n      const rectHeight = 50;\r\n      const cornerRadius = 8;\r\n      \r\n      context.beginPath();\r\n      context.moveTo(20 + cornerRadius, 10);\r\n      context.lineTo(20 + rectWidth - cornerRadius, 10);\r\n      context.quadraticCurveTo(20 + rectWidth, 10, 20 + rectWidth, 10 + cornerRadius);\r\n      context.lineTo(20 + rectWidth, 10 + rectHeight - cornerRadius);\r\n      context.quadraticCurveTo(20 + rectWidth, 10 + rectHeight, 20 + rectWidth - cornerRadius, 10 + rectHeight);\r\n      context.lineTo(20 + cornerRadius, 10 + rectHeight);\r\n      context.quadraticCurveTo(20, 10 + rectHeight, 20, 10 + rectHeight - cornerRadius);\r\n      context.lineTo(20, 10 + cornerRadius);\r\n      context.quadraticCurveTo(20, 10, 20 + cornerRadius, 10);\r\n      context.closePath();\r\n      \r\n      context.fill();\r\n      context.stroke();\r\n      \r\n      // Add text\r\n      context.font = 'bold 20px Arial';\r\n      context.fillStyle = 'white';\r\n      context.textAlign = 'center';\r\n      context.textBaseline = 'middle';\r\n      context.fillText(objectData.name, canvas.width / 2, 35);\r\n      \r\n      // Create sprite\r\n      const texture = new THREE.CanvasTexture(canvas);\r\n      const spriteMaterial = new THREE.SpriteMaterial({ \r\n        map: texture,\r\n        transparent: true\r\n      });\r\n      const sprite = new THREE.Sprite(spriteMaterial);\r\n      sprite.scale.set(1.0, 0.5, 1);\r\n      sprite.position.set(0, 0.5, 0);\r\n      sprite.visible = false; // Hidden by default\r\n      mesh.add(sprite);\r\n      \r\n      // Store the object with its metadata\r\n      const objectWithMeta = {\r\n        mesh,\r\n        data: objectData,\r\n        label: labelDiv,\r\n        sprite\r\n      };\r\n      \r\n      scene.add(mesh);\r\n      objectsInScene.push(objectWithMeta);\r\n    });\r\n    \r\n    setObjects(objectsInScene);\r\n    \r\n    // Helper function to get status color\r\n    function getStatusColor(status) {\r\n      switch(status) {\r\n        case \"Critical\": return 0xff0000;\r\n        case \"Warning\": return 0xffcc00;\r\n        case \"Offline\": return 0x888888;\r\n        default: return 0x00ff00; // Active\r\n      }\r\n    }\r\n    \r\n    // Raycaster for object selection\r\n    const raycaster = new THREE.Raycaster();\r\n    const mouse = new THREE.Vector2();\r\n    \r\n    // Handle tap/click\r\n    const handleTap = (event) => {\r\n      // Normalize mouse/touch coordinates\r\n      const x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      const y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n      mouse.set(x, y);\r\n      \r\n      // Update the raycaster\r\n      raycaster.setFromCamera(mouse, camera);\r\n      \r\n      // Find intersections\r\n      const meshes = objectsInScene.map(obj => obj.mesh);\r\n      const intersects = raycaster.intersectObjects(meshes, true);\r\n      \r\n      // If we intersected with something\r\n      if (intersects.length > 0) {\r\n        // Get the root parent object (in case we hit a child like pulse)\r\n        let selectedMesh = intersects[0].object;\r\n        while (selectedMesh.parent && selectedMesh.parent !== scene) {\r\n          selectedMesh = selectedMesh.parent;\r\n        }\r\n        \r\n        const selectedObj = objectsInScene.find(obj => obj.mesh === selectedMesh);\r\n        \r\n        if (selectedObj) {\r\n          if (selectedObject === selectedObj) {\r\n            // Toggle data panel if tapping the same object\r\n            setShowDataPanel(!showDataPanel);\r\n          } else {\r\n            // Select new object and show data panel\r\n            setSelectedObject(selectedObj);\r\n            setShowDataPanel(true);\r\n          }\r\n          \r\n          // Hide all sprites\r\n          objectsInScene.forEach(obj => {\r\n            if (obj.sprite) obj.sprite.visible = false;\r\n          });\r\n          \r\n          // Show sprite for selected object\r\n          selectedObj.sprite.visible = true;\r\n        }\r\n      } else {\r\n        // Hide data panel but keep selection\r\n        setShowDataPanel(false);\r\n        \r\n        // Hide all sprite labels when tapping on empty space\r\n        objectsInScene.forEach(obj => {\r\n          if (obj.sprite) obj.sprite.visible = false;\r\n        });\r\n      }\r\n    };\r\n    \r\n    // Handle device orientation to update camera view\r\n    const updateCameraFromOrientation = () => {\r\n      // This is a simplified calculation and might need calibration\r\n      // depending on device and desired behavior\r\n      \r\n      // Only apply rotation if we have significant movement\r\n      if (deviceOrientation.alpha !== 0 || deviceOrientation.beta !== 0 || deviceOrientation.gamma !== 0) {\r\n        // Create a rotation matrix from device orientation\r\n        const euler = new THREE.Euler(\r\n          THREE.MathUtils.degToRad(deviceOrientation.beta), \r\n          THREE.MathUtils.degToRad(deviceOrientation.alpha), \r\n          -THREE.MathUtils.degToRad(deviceOrientation.gamma),\r\n          'YXZ' // Order matters for rotation\r\n        );\r\n        \r\n        camera.setRotationFromEuler(euler);\r\n      }\r\n    };\r\n    \r\n    // Setup event listeners\r\n    window.addEventListener('click', handleTap);\r\n    window.addEventListener('touchend', (e) => handleTap(e.changedTouches[0]));\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Animation loop\r\n    const animate = () => {\r\n      const animationId = requestAnimationFrame(animate);\r\n      \r\n      // Update camera based on device orientation\r\n      updateCameraFromOrientation();\r\n      \r\n      // Update pulse animations\r\n      objectsInScene.forEach(obj => {\r\n        const pulse = obj.mesh.children[0];\r\n        \r\n        // Get pulse speed from userData\r\n        const pulseSpeed = pulse.userData.pulseSpeed;\r\n        \r\n        // Update pulse scale\r\n        if (pulse.userData.pulseDirection === 1) {\r\n          pulse.scale.x += pulseSpeed;\r\n          pulse.scale.y += pulseSpeed;\r\n          pulse.scale.z += pulseSpeed;\r\n          \r\n          if (pulse.scale.x >= pulse.userData.maxScale) {\r\n            pulse.userData.pulseDirection = -1;\r\n          }\r\n        } else {\r\n          pulse.scale.x -= pulseSpeed;\r\n          pulse.scale.y -= pulseSpeed;\r\n          pulse.scale.z -= pulseSpeed;\r\n          \r\n          if (pulse.scale.x <= pulse.userData.minScale) {\r\n            pulse.userData.pulseDirection = 1;\r\n          }\r\n        }\r\n        \r\n        // Update opacity based on scale\r\n        pulse.material.opacity = 0.5 - ((pulse.scale.x - pulse.userData.minScale) / \r\n          (pulse.userData.maxScale - pulse.userData.minScale)) * 0.4;\r\n          \r\n        // Rotate status indicators slightly\r\n        if (obj.mesh.children.length > 1) {\r\n          obj.mesh.children[1].rotation.y += 0.01;\r\n        }\r\n        \r\n        // Make sprite labels always face camera\r\n        if (obj.sprite) {\r\n          obj.sprite.lookAt(camera.position);\r\n        }\r\n      });\r\n      \r\n      renderer.render(scene, camera);\r\n    };\r\n    \r\n    const animationId = requestAnimationFrame(animate);\r\n    \r\n    // Add HTML overlays to the DOM\r\n    objectsInScene.forEach(obj => {\r\n      document.body.appendChild(obj.label);\r\n    });\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('click', handleTap);\r\n      window.removeEventListener('touchend', handleTap);\r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      cancelAnimationFrame(animationId);\r\n      \r\n      objectsInScene.forEach(obj => {\r\n        if (obj.label.parentNode) {\r\n          obj.label.parentNode.removeChild(obj.label);\r\n        }\r\n      });\r\n      \r\n      if (mountRef.current && mountRef.current.contains(renderer.domElement)) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n    };\r\n  }, [cameraActive, deviceOrientation, selectedObject]);\r\n  \r\n  // Format date string nicely\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n  \r\n  // Get status indicator color\r\n  const getStatusClass = (status) => {\r\n    switch(status) {\r\n      case \"Critical\": return \"status-critical\";\r\n      case \"Warning\": return \"status-warning\";\r\n      case \"Offline\": return \"status-offline\";\r\n      default: return \"status-active\";\r\n    }\r\n  };\r\n  \r\n  // Render enhanced card-style data panel\r\n  const renderDataPanel = () => {\r\n    if (!selectedObject || !showDataPanel) return null;\r\n    \r\n    const { data } = selectedObject;\r\n    const statusClass = getStatusClass(data.status);\r\n    \r\n    return (\r\n      <div className=\"data-panel card-ui\">\r\n        <div className=\"panel-header\" style={{ backgroundColor: `#${data.color.toString(16)}` }}>\r\n          <div className=\"header-content\">\r\n            <div className={`status-indicator ${statusClass}`}></div>\r\n            <h3>{data.name}</h3>\r\n          </div>\r\n          <button className=\"close-button\" onClick={() => setShowDataPanel(false)}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"panel-content\">\r\n          <div className=\"data-grid\">\r\n            <div className=\"data-section location-section\">\r\n              <h4>Location</h4>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">X:</span>\r\n                  <span className=\"data-value\">{selectedObject.mesh.position.x.toFixed(2)} m</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Y:</span>\r\n                  <span className=\"data-value\">{selectedObject.mesh.position.y.toFixed(2)} m</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Z:</span>\r\n                  <span className=\"data-value\">{selectedObject.mesh.position.z.toFixed(2)} m</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-section properties-section\">\r\n              <h4>Properties</h4>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Type:</span>\r\n                  <span className=\"data-value\">{data.type}</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Status:</span>\r\n                  <span className={`data-value ${statusClass}`}>{data.status}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell full-width\">\r\n                  <span className=\"data-label\">Last Updated:</span>\r\n                  <span className=\"data-value\">{formatDate(data.lastUpdated)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell full-width\">\r\n                  <span className=\"data-label\">Description:</span>\r\n                  <span className=\"data-value description\">{data.description}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-section readings-section\">\r\n              <h4>Recent Readings</h4>\r\n              <div className=\"mini-chart\">\r\n                {data.readings.map((value, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className=\"chart-bar\"\r\n                    style={{ \r\n                      height: `${value}%`,\r\n                      backgroundColor: index === data.readings.length - 1 ? \r\n                        `#${data.color.toString(16)}` : '#3498db'\r\n                    }}\r\n                  >\r\n                    <span className=\"tooltip\">{value}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"chart-legend\">\r\n                <span>Past</span>\r\n                <span>Present</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-details\"></i>\r\n              <span>Details</span>\r\n            </button>\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-history\"></i>\r\n              <span>History</span>\r\n            </button>\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-share\"></i>\r\n              <span>Share</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render AR mode instructions\r\n  const renderInstructions = () => {\r\n    return (\r\n      <div className=\"instructions card-ui\">\r\n        <p>Look around to find virtual objects. Tap objects to view details.</p>\r\n        <button className=\"dismiss-button\">✕</button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render simple status bar\r\n  const renderStatusBar = () => {\r\n    const activeObjects = objects.filter(obj => obj.data.status === \"Active\").length;\r\n    const warningObjects = objects.filter(obj => obj.data.status === \"Warning\").length;\r\n    const criticalObjects = objects.filter(obj => obj.data.status === \"Critical\").length;\r\n    \r\n    return (\r\n      <div className=\"status-bar card-ui\">\r\n        <div className=\"status-content\">\r\n          <div className=\"object-count\">\r\n            <span className=\"count-number\">{objects.length}</span>\r\n            <span className=\"count-label\">Objects</span>\r\n          </div>\r\n          <div className=\"status-indicators\">\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-active\"></div>\r\n              <span>{activeObjects}</span>\r\n            </div>\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-warning\"></div>\r\n              <span>{warningObjects}</span>\r\n            </div>\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-critical\"></div>\r\n              <span>{criticalObjects}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"ar-container\">\r\n      {/* Camera video feed for AR background */}\r\n      <video \r\n        ref={videoRef}\r\n        className=\"camera-feed\"\r\n        autoPlay\r\n        playsInline\r\n        muted\r\n      />\r\n      \r\n      {/* Three.js scene */}\r\n      <div ref={mountRef} className=\"ar-scene\"></div>\r\n      \r\n      {/* UI Components */}\r\n      <div className=\"ui-layer\">\r\n        {renderDataPanel()}\r\n        {renderStatusBar()}\r\n        {renderInstructions()}\r\n        \r\n        {/* Camera permissions info */}\r\n        {!cameraActive && (\r\n          <div className=\"camera-permissions card-ui\">\r\n            <h3>Camera Access Required</h3>\r\n            <p>This AR application needs access to your camera to function.</p>\r\n            <button \r\n              className=\"permission-button\"\r\n              onClick={requestCameraAccess}\r\n            >\r\n              Grant Camera Access\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImprovedARVisualizer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMS,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAC3F,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;;EAEtE;EACA9B,SAAS,CAAC,MAAM;IACd+B,mBAAmB,CAAC,CAAC;;IAErB;IACA,IAAI,OAAOC,sBAAsB,KAAK,WAAW,IAC7C,OAAOA,sBAAsB,CAACC,iBAAiB,KAAK,UAAU,EAAE;MAClE;MACAD,sBAAsB,CAACC,iBAAiB,CAAC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,KAAK,SAAS,EAAE;UAC1BC,MAAM,CAACC,gBAAgB,CAAC,mBAAmB,EAAEC,iBAAiB,CAAC;UAC/DF,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEE,YAAY,CAAC;QACvD;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;IACzB,CAAC,MAAM;MACL;MACAN,MAAM,CAACC,gBAAgB,CAAC,mBAAmB,EAAEC,iBAAiB,CAAC;MAC/DF,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEE,YAAY,CAAC;IACvD;IAEA,OAAO,MAAM;MACXH,MAAM,CAACO,mBAAmB,CAAC,mBAAmB,EAAEL,iBAAiB,CAAC;MAClEF,MAAM,CAACO,mBAAmB,CAAC,cAAc,EAAEJ,YAAY,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMD,iBAAiB,GAAIM,KAAK,IAAK;IACnCtB,oBAAoB,CAAC;MACnBC,KAAK,EAAEqB,KAAK,CAACrB,KAAK,IAAI,CAAC;MAAE;MACzBC,IAAI,EAAEoB,KAAK,CAACpB,IAAI,IAAI,CAAC;MAAI;MACzBC,KAAK,EAAEmB,KAAK,CAACnB,KAAK,IAAI,CAAC,CAAE;IAC3B,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMc,YAAY,GAAIK,KAAK,IAAK;IAC9B,MAAMC,YAAY,GAAGD,KAAK,CAACE,4BAA4B;IACvD,IAAID,YAAY,EAAE;MAChBlB,eAAe,CAAC;QACdC,CAAC,EAAEiB,YAAY,CAACjB,CAAC,IAAI,CAAC;QACtBC,CAAC,EAAEgB,YAAY,CAAChB,CAAC,IAAI,CAAC;QACtBC,CAAC,EAAEe,YAAY,CAACf,CAAC,IAAI;MACvB,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF,MAAMgB,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QACvDC,KAAK,EAAE;UACLC,UAAU,EAAE,aAAa;UACzBC,KAAK,EAAE;YAAEC,KAAK,EAAElB,MAAM,CAACmB;UAAW,CAAC;UACnCC,MAAM,EAAE;YAAEF,KAAK,EAAElB,MAAM,CAACqB;UAAY;QACtC;MACF,CAAC,CAAC;MAEFrC,cAAc,CAAC2B,MAAM,CAAC;MACtB7B,eAAe,CAAC,IAAI,CAAC;MAErB,IAAIR,QAAQ,CAACgD,OAAO,EAAE;QACpBhD,QAAQ,CAACgD,OAAO,CAACC,SAAS,GAAGZ,MAAM;MACrC;IACF,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CkB,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI1C,WAAW,EAAE;MACfA,WAAW,CAAC2C,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACtD7C,cAAc,CAAC,IAAI,CAAC;MACpBF,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,YAAY,EAAE;;IAEnB;IACA,MAAMiD,KAAK,GAAG,IAAI/D,KAAK,CAACgE,KAAK,CAAC,CAAC;IAE/B,MAAMC,MAAM,GAAG,IAAIjE,KAAK,CAACkE,iBAAiB,CACxC,EAAE,EACFjC,MAAM,CAACmB,UAAU,GAAGnB,MAAM,CAACqB,WAAW,EACtC,GAAG,EACH,IACF,CAAC;IACDW,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE9B,MAAMC,QAAQ,GAAG,IAAIrE,KAAK,CAACsE,aAAa,CAAC;MACvCC,SAAS,EAAE,IAAI;MACfnD,KAAK,EAAE,IAAI,CAAC;IACd,CAAC,CAAC;IACFiD,QAAQ,CAACG,OAAO,CAACvC,MAAM,CAACmB,UAAU,EAAEnB,MAAM,CAACqB,WAAW,CAAC;IACvDe,QAAQ,CAACI,aAAa,CAACxC,MAAM,CAACyC,gBAAgB,CAAC;IAC/CL,QAAQ,CAACM,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;;IAErC;IACArE,QAAQ,CAACiD,OAAO,CAACqB,WAAW,CAACP,QAAQ,CAACQ,UAAU,CAAC;;IAEjD;IACA,MAAMC,YAAY,GAAG,IAAI9E,KAAK,CAAC+E,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DhB,KAAK,CAACiB,GAAG,CAACF,YAAY,CAAC;IAEvB,MAAMG,gBAAgB,GAAG,IAAIjF,KAAK,CAACkF,gBAAgB,CAAC,QAAQ,EAAE,GAAG,CAAC;IAClED,gBAAgB,CAACd,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACtCL,KAAK,CAACiB,GAAG,CAACC,gBAAgB,CAAC;;IAE3B;IACA,MAAME,UAAU,GAAG,IAAInF,KAAK,CAACoF,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACnED,UAAU,CAAChB,QAAQ,CAACzC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5ByD,UAAU,CAACE,QAAQ,CAACC,OAAO,GAAG,GAAG;IACjCH,UAAU,CAACE,QAAQ,CAACE,WAAW,GAAG,IAAI;IACtCxB,KAAK,CAACiB,GAAG,CAACG,UAAU,CAAC;;IAErB;IACA,MAAMK,cAAc,GAAG,EAAE;IAEzBvF,aAAa,CAAC2D,OAAO,CAAC6B,UAAU,IAAI;MAClC;MACA,MAAMC,QAAQ,GAAG,IAAI1F,KAAK,CAAC2F,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;MACtD,MAAMN,QAAQ,GAAG,IAAIrF,KAAK,CAAC4F,oBAAoB,CAAC;QAC9CC,KAAK,EAAEJ,UAAU,CAACI,KAAK;QACvBC,QAAQ,EAAEL,UAAU,CAACI,KAAK;QAC1BE,iBAAiB,EAAE,GAAG;QACtBC,SAAS,EAAE,GAAG;QACdC,SAAS,EAAE;MACb,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,IAAIlG,KAAK,CAACmG,IAAI,CAACT,QAAQ,EAAEL,QAAQ,CAAC;;MAE/C;MACA;MACA,MAAMe,KAAK,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,EAAE,GAAG,CAAC;MACzC,MAAMC,MAAM,GAAG,CAAC,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACtC,MAAM7E,CAAC,GAAG4E,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC,GAAGI,MAAM;MAClC,MAAM7E,CAAC,GAAG0E,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC,GAAGI,MAAM;MAClC,MAAM9E,CAAC,GAAG,CAAC2E,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;;MAErCJ,IAAI,CAAC/B,QAAQ,CAACC,GAAG,CAAC3C,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;;MAE1B;MACA,MAAMgF,aAAa,GAAG,IAAI3G,KAAK,CAAC2F,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;MAC5D,MAAMiB,aAAa,GAAG,IAAI5G,KAAK,CAAC6G,iBAAiB,CAAC;QAChDhB,KAAK,EAAEJ,UAAU,CAACI,KAAK;QACvBN,WAAW,EAAE,IAAI;QACjBD,OAAO,EAAE;MACX,CAAC,CAAC;MACF,MAAMwB,KAAK,GAAG,IAAI9G,KAAK,CAACmG,IAAI,CAACQ,aAAa,EAAEC,aAAa,CAAC;MAC1DE,KAAK,CAACC,KAAK,CAAC3C,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;MAExB;MACA,IAAI4C,UAAU,GAAG,IAAI;MACrB,IAAIC,QAAQ,GAAG,GAAG;MAElB,QAAOxB,UAAU,CAACyB,MAAM;QACtB,KAAK,UAAU;UACbF,UAAU,GAAG,IAAI;UACjBC,QAAQ,GAAG,GAAG;UACd;QACF,KAAK,SAAS;UACZD,UAAU,GAAG,IAAI;UACjBC,QAAQ,GAAG,GAAG;UACd;QACF,KAAK,SAAS;UACZD,UAAU,GAAG,KAAK;UAClBC,QAAQ,GAAG,GAAG;UACd;QACF;UAAS;UACPD,UAAU,GAAG,IAAI;UACjBC,QAAQ,GAAG,GAAG;MAClB;MAEAH,KAAK,CAACK,QAAQ,GAAG;QACfC,cAAc,EAAE,CAAC;QACjBC,QAAQ,EAAE,CAAC;QACXJ,QAAQ,EAAEA,QAAQ;QAClBD,UAAU,EAAEA;MACd,CAAC;MACDd,IAAI,CAAClB,GAAG,CAAC8B,KAAK,CAAC;;MAEf;MACA,MAAMQ,cAAc,GAAG,IAAItH,KAAK,CAACuH,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;MAC9D,MAAMC,WAAW,GAAGC,cAAc,CAAChC,UAAU,CAACyB,MAAM,CAAC;MACrD,MAAMQ,cAAc,GAAG,IAAI1H,KAAK,CAAC6G,iBAAiB,CAAC;QAAEhB,KAAK,EAAE2B;MAAY,CAAC,CAAC;MAC1E,MAAMG,eAAe,GAAG,IAAI3H,KAAK,CAACmG,IAAI,CAACmB,cAAc,EAAEI,cAAc,CAAC;MACtEC,eAAe,CAACxD,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MACvC8B,IAAI,CAAClB,GAAG,CAAC2C,eAAe,CAAC;;MAEzB;MACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;MAC9CF,QAAQ,CAACG,SAAS,GAAG,cAAc;MACnCH,QAAQ,CAACI,WAAW,GAAGvC,UAAU,CAACwC,IAAI;MACtCL,QAAQ,CAACM,KAAK,CAACC,OAAO,GAAG,MAAM;;MAE/B;MACA,MAAMC,MAAM,GAAGP,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;MAC/C,MAAMO,OAAO,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACvCF,MAAM,CAAClF,KAAK,GAAG,GAAG;MAClBkF,MAAM,CAAC/E,MAAM,GAAG,GAAG;MAEnBgF,OAAO,CAACE,SAAS,GAAG,wBAAwB;MAC5CF,OAAO,CAACG,WAAW,GAAG,0BAA0B;MAChDH,OAAO,CAACI,SAAS,GAAG,CAAC;;MAErB;MACA,MAAMC,SAAS,GAAG,GAAG;MACrB,MAAMC,UAAU,GAAG,EAAE;MACrB,MAAMC,YAAY,GAAG,CAAC;MAEtBP,OAAO,CAACQ,SAAS,CAAC,CAAC;MACnBR,OAAO,CAACS,MAAM,CAAC,EAAE,GAAGF,YAAY,EAAE,EAAE,CAAC;MACrCP,OAAO,CAACU,MAAM,CAAC,EAAE,GAAGL,SAAS,GAAGE,YAAY,EAAE,EAAE,CAAC;MACjDP,OAAO,CAACW,gBAAgB,CAAC,EAAE,GAAGN,SAAS,EAAE,EAAE,EAAE,EAAE,GAAGA,SAAS,EAAE,EAAE,GAAGE,YAAY,CAAC;MAC/EP,OAAO,CAACU,MAAM,CAAC,EAAE,GAAGL,SAAS,EAAE,EAAE,GAAGC,UAAU,GAAGC,YAAY,CAAC;MAC9DP,OAAO,CAACW,gBAAgB,CAAC,EAAE,GAAGN,SAAS,EAAE,EAAE,GAAGC,UAAU,EAAE,EAAE,GAAGD,SAAS,GAAGE,YAAY,EAAE,EAAE,GAAGD,UAAU,CAAC;MACzGN,OAAO,CAACU,MAAM,CAAC,EAAE,GAAGH,YAAY,EAAE,EAAE,GAAGD,UAAU,CAAC;MAClDN,OAAO,CAACW,gBAAgB,CAAC,EAAE,EAAE,EAAE,GAAGL,UAAU,EAAE,EAAE,EAAE,EAAE,GAAGA,UAAU,GAAGC,YAAY,CAAC;MACjFP,OAAO,CAACU,MAAM,CAAC,EAAE,EAAE,EAAE,GAAGH,YAAY,CAAC;MACrCP,OAAO,CAACW,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGJ,YAAY,EAAE,EAAE,CAAC;MACvDP,OAAO,CAACY,SAAS,CAAC,CAAC;MAEnBZ,OAAO,CAACa,IAAI,CAAC,CAAC;MACdb,OAAO,CAACc,MAAM,CAAC,CAAC;;MAEhB;MACAd,OAAO,CAACe,IAAI,GAAG,iBAAiB;MAChCf,OAAO,CAACE,SAAS,GAAG,OAAO;MAC3BF,OAAO,CAACgB,SAAS,GAAG,QAAQ;MAC5BhB,OAAO,CAACiB,YAAY,GAAG,QAAQ;MAC/BjB,OAAO,CAACkB,QAAQ,CAAC9D,UAAU,CAACwC,IAAI,EAAEG,MAAM,CAAClF,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC;;MAEvD;MACA,MAAMsG,OAAO,GAAG,IAAIxJ,KAAK,CAACyJ,aAAa,CAACrB,MAAM,CAAC;MAC/C,MAAMsB,cAAc,GAAG,IAAI1J,KAAK,CAAC2J,cAAc,CAAC;QAC9CC,GAAG,EAAEJ,OAAO;QACZjE,WAAW,EAAE;MACf,CAAC,CAAC;MACF,MAAMsE,MAAM,GAAG,IAAI7J,KAAK,CAAC8J,MAAM,CAACJ,cAAc,CAAC;MAC/CG,MAAM,CAAC9C,KAAK,CAAC3C,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MAC7ByF,MAAM,CAAC1F,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC9ByF,MAAM,CAACE,OAAO,GAAG,KAAK,CAAC,CAAC;MACxB7D,IAAI,CAAClB,GAAG,CAAC6E,MAAM,CAAC;;MAEhB;MACA,MAAMG,cAAc,GAAG;QACrB9D,IAAI;QACJ+D,IAAI,EAAExE,UAAU;QAChByE,KAAK,EAAEtC,QAAQ;QACfiC;MACF,CAAC;MAED9F,KAAK,CAACiB,GAAG,CAACkB,IAAI,CAAC;MACfV,cAAc,CAAC2E,IAAI,CAACH,cAAc,CAAC;IACrC,CAAC,CAAC;IAEFvJ,UAAU,CAAC+E,cAAc,CAAC;;IAE1B;IACA,SAASiC,cAAcA,CAACP,MAAM,EAAE;MAC9B,QAAOA,MAAM;QACX,KAAK,UAAU;UAAE,OAAO,QAAQ;QAChC,KAAK,SAAS;UAAE,OAAO,QAAQ;QAC/B,KAAK,SAAS;UAAE,OAAO,QAAQ;QAC/B;UAAS,OAAO,QAAQ;QAAE;MAC5B;IACF;;IAEA;IACA,MAAMkD,SAAS,GAAG,IAAIpK,KAAK,CAACqK,SAAS,CAAC,CAAC;IACvC,MAAMC,KAAK,GAAG,IAAItK,KAAK,CAACuK,OAAO,CAAC,CAAC;;IAEjC;IACA,MAAMC,SAAS,GAAI/H,KAAK,IAAK;MAC3B;MACA,MAAMhB,CAAC,GAAIgB,KAAK,CAACgI,OAAO,GAAGxI,MAAM,CAACmB,UAAU,GAAI,CAAC,GAAG,CAAC;MACrD,MAAM1B,CAAC,GAAG,EAAEe,KAAK,CAACiI,OAAO,GAAGzI,MAAM,CAACqB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC;MACvDgH,KAAK,CAAClG,GAAG,CAAC3C,CAAC,EAAEC,CAAC,CAAC;;MAEf;MACA0I,SAAS,CAACO,aAAa,CAACL,KAAK,EAAErG,MAAM,CAAC;;MAEtC;MACA,MAAM2G,MAAM,GAAGpF,cAAc,CAACoE,GAAG,CAACiB,GAAG,IAAIA,GAAG,CAAC3E,IAAI,CAAC;MAClD,MAAM4E,UAAU,GAAGV,SAAS,CAACW,gBAAgB,CAACH,MAAM,EAAE,IAAI,CAAC;;MAE3D;MACA,IAAIE,UAAU,CAACE,MAAM,GAAG,CAAC,EAAE;QACzB;QACA,IAAIC,YAAY,GAAGH,UAAU,CAAC,CAAC,CAAC,CAACI,MAAM;QACvC,OAAOD,YAAY,CAACE,MAAM,IAAIF,YAAY,CAACE,MAAM,KAAKpH,KAAK,EAAE;UAC3DkH,YAAY,GAAGA,YAAY,CAACE,MAAM;QACpC;QAEA,MAAMC,WAAW,GAAG5F,cAAc,CAAC6F,IAAI,CAACR,GAAG,IAAIA,GAAG,CAAC3E,IAAI,KAAK+E,YAAY,CAAC;QAEzE,IAAIG,WAAW,EAAE;UACf,IAAI1K,cAAc,KAAK0K,WAAW,EAAE;YAClC;YACAvK,gBAAgB,CAAC,CAACD,aAAa,CAAC;UAClC,CAAC,MAAM;YACL;YACAD,iBAAiB,CAACyK,WAAW,CAAC;YAC9BvK,gBAAgB,CAAC,IAAI,CAAC;UACxB;;UAEA;UACA2E,cAAc,CAAC5B,OAAO,CAACiH,GAAG,IAAI;YAC5B,IAAIA,GAAG,CAAChB,MAAM,EAAEgB,GAAG,CAAChB,MAAM,CAACE,OAAO,GAAG,KAAK;UAC5C,CAAC,CAAC;;UAEF;UACAqB,WAAW,CAACvB,MAAM,CAACE,OAAO,GAAG,IAAI;QACnC;MACF,CAAC,MAAM;QACL;QACAlJ,gBAAgB,CAAC,KAAK,CAAC;;QAEvB;QACA2E,cAAc,CAAC5B,OAAO,CAACiH,GAAG,IAAI;UAC5B,IAAIA,GAAG,CAAChB,MAAM,EAAEgB,GAAG,CAAChB,MAAM,CAACE,OAAO,GAAG,KAAK;QAC5C,CAAC,CAAC;MACJ;IACF,CAAC;;IAED;IACA,MAAMuB,2BAA2B,GAAGA,CAAA,KAAM;MACxC;MACA;;MAEA;MACA,IAAIpK,iBAAiB,CAACE,KAAK,KAAK,CAAC,IAAIF,iBAAiB,CAACG,IAAI,KAAK,CAAC,IAAIH,iBAAiB,CAACI,KAAK,KAAK,CAAC,EAAE;QAClG;QACA,MAAMiK,KAAK,GAAG,IAAIvL,KAAK,CAACwL,KAAK,CAC3BxL,KAAK,CAACyL,SAAS,CAACC,QAAQ,CAACxK,iBAAiB,CAACG,IAAI,CAAC,EAChDrB,KAAK,CAACyL,SAAS,CAACC,QAAQ,CAACxK,iBAAiB,CAACE,KAAK,CAAC,EACjD,CAACpB,KAAK,CAACyL,SAAS,CAACC,QAAQ,CAACxK,iBAAiB,CAACI,KAAK,CAAC,EAClD,KAAK,CAAC;QACR,CAAC;QAED2C,MAAM,CAAC0H,oBAAoB,CAACJ,KAAK,CAAC;MACpC;IACF,CAAC;;IAED;IACAtJ,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEsI,SAAS,CAAC;IAC3CvI,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAG0J,CAAC,IAAKpB,SAAS,CAACoB,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE1E;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzB7H,MAAM,CAAC8H,MAAM,GAAG9J,MAAM,CAACmB,UAAU,GAAGnB,MAAM,CAACqB,WAAW;MACtDW,MAAM,CAAC+H,sBAAsB,CAAC,CAAC;MAC/B3H,QAAQ,CAACG,OAAO,CAACvC,MAAM,CAACmB,UAAU,EAAEnB,MAAM,CAACqB,WAAW,CAAC;IACzD,CAAC;IAEDrB,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE4J,YAAY,CAAC;;IAE/C;IACA,MAAMG,OAAO,GAAGA,CAAA,KAAM;MACpB,MAAMC,WAAW,GAAGC,qBAAqB,CAACF,OAAO,CAAC;;MAElD;MACAX,2BAA2B,CAAC,CAAC;;MAE7B;MACA9F,cAAc,CAAC5B,OAAO,CAACiH,GAAG,IAAI;QAC5B,MAAM/D,KAAK,GAAG+D,GAAG,CAAC3E,IAAI,CAACkG,QAAQ,CAAC,CAAC,CAAC;;QAElC;QACA,MAAMpF,UAAU,GAAGF,KAAK,CAACK,QAAQ,CAACH,UAAU;;QAE5C;QACA,IAAIF,KAAK,CAACK,QAAQ,CAACC,cAAc,KAAK,CAAC,EAAE;UACvCN,KAAK,CAACC,KAAK,CAACtF,CAAC,IAAIuF,UAAU;UAC3BF,KAAK,CAACC,KAAK,CAACrF,CAAC,IAAIsF,UAAU;UAC3BF,KAAK,CAACC,KAAK,CAACpF,CAAC,IAAIqF,UAAU;UAE3B,IAAIF,KAAK,CAACC,KAAK,CAACtF,CAAC,IAAIqF,KAAK,CAACK,QAAQ,CAACF,QAAQ,EAAE;YAC5CH,KAAK,CAACK,QAAQ,CAACC,cAAc,GAAG,CAAC,CAAC;UACpC;QACF,CAAC,MAAM;UACLN,KAAK,CAACC,KAAK,CAACtF,CAAC,IAAIuF,UAAU;UAC3BF,KAAK,CAACC,KAAK,CAACrF,CAAC,IAAIsF,UAAU;UAC3BF,KAAK,CAACC,KAAK,CAACpF,CAAC,IAAIqF,UAAU;UAE3B,IAAIF,KAAK,CAACC,KAAK,CAACtF,CAAC,IAAIqF,KAAK,CAACK,QAAQ,CAACE,QAAQ,EAAE;YAC5CP,KAAK,CAACK,QAAQ,CAACC,cAAc,GAAG,CAAC;UACnC;QACF;;QAEA;QACAN,KAAK,CAACzB,QAAQ,CAACC,OAAO,GAAG,GAAG,GAAI,CAACwB,KAAK,CAACC,KAAK,CAACtF,CAAC,GAAGqF,KAAK,CAACK,QAAQ,CAACE,QAAQ,KACrEP,KAAK,CAACK,QAAQ,CAACF,QAAQ,GAAGH,KAAK,CAACK,QAAQ,CAACE,QAAQ,CAAC,GAAI,GAAG;;QAE5D;QACA,IAAIwD,GAAG,CAAC3E,IAAI,CAACkG,QAAQ,CAACpB,MAAM,GAAG,CAAC,EAAE;UAChCH,GAAG,CAAC3E,IAAI,CAACkG,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC3K,CAAC,IAAI,IAAI;QACzC;;QAEA;QACA,IAAImJ,GAAG,CAAChB,MAAM,EAAE;UACdgB,GAAG,CAAChB,MAAM,CAACyC,MAAM,CAACrI,MAAM,CAACE,QAAQ,CAAC;QACpC;MACF,CAAC,CAAC;MAEFE,QAAQ,CAACkI,MAAM,CAACxI,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAED,MAAMiI,WAAW,GAAGC,qBAAqB,CAACF,OAAO,CAAC;;IAElD;IACAzG,cAAc,CAAC5B,OAAO,CAACiH,GAAG,IAAI;MAC5BhD,QAAQ,CAAC2E,IAAI,CAAC5H,WAAW,CAACiG,GAAG,CAACX,KAAK,CAAC;IACtC,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXjI,MAAM,CAACO,mBAAmB,CAAC,OAAO,EAAEgI,SAAS,CAAC;MAC9CvI,MAAM,CAACO,mBAAmB,CAAC,UAAU,EAAEgI,SAAS,CAAC;MACjDvI,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEsJ,YAAY,CAAC;MAElDW,oBAAoB,CAACP,WAAW,CAAC;MAEjC1G,cAAc,CAAC5B,OAAO,CAACiH,GAAG,IAAI;QAC5B,IAAIA,GAAG,CAACX,KAAK,CAACwC,UAAU,EAAE;UACxB7B,GAAG,CAACX,KAAK,CAACwC,UAAU,CAACC,WAAW,CAAC9B,GAAG,CAACX,KAAK,CAAC;QAC7C;MACF,CAAC,CAAC;MAEF,IAAI5J,QAAQ,CAACiD,OAAO,IAAIjD,QAAQ,CAACiD,OAAO,CAACqJ,QAAQ,CAACvI,QAAQ,CAACQ,UAAU,CAAC,EAAE;QACtEvE,QAAQ,CAACiD,OAAO,CAACoJ,WAAW,CAACtI,QAAQ,CAACQ,UAAU,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,CAAC/D,YAAY,EAAEI,iBAAiB,EAAER,cAAc,CAAC,CAAC;;EAErD;EACA,MAAMmM,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIhG,MAAM,IAAK;IACjC,QAAOA,MAAM;MACX,KAAK,UAAU;QAAE,OAAO,iBAAiB;MACzC,KAAK,SAAS;QAAE,OAAO,gBAAgB;MACvC,KAAK,SAAS;QAAE,OAAO,gBAAgB;MACvC;QAAS,OAAO,eAAe;IACjC;EACF,CAAC;;EAED;EACA,MAAMiG,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACzM,cAAc,IAAI,CAACE,aAAa,EAAE,OAAO,IAAI;IAElD,MAAM;MAAEqJ;IAAK,CAAC,GAAGvJ,cAAc;IAC/B,MAAM0M,WAAW,GAAGF,cAAc,CAACjD,IAAI,CAAC/C,MAAM,CAAC;IAE/C,oBACE/G,OAAA;MAAK4H,SAAS,EAAC,oBAAoB;MAAAqE,QAAA,gBACjCjM,OAAA;QAAK4H,SAAS,EAAC,cAAc;QAACG,KAAK,EAAE;UAAEmF,eAAe,EAAE,IAAIpD,IAAI,CAACpE,KAAK,CAACyH,QAAQ,CAAC,EAAE,CAAC;QAAG,CAAE;QAAAlB,QAAA,gBACtFjM,OAAA;UAAK4H,SAAS,EAAC,gBAAgB;UAAAqE,QAAA,gBAC7BjM,OAAA;YAAK4H,SAAS,EAAE,oBAAoBqF,WAAW;UAAG;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACzDvN,OAAA;YAAAiM,QAAA,EAAKnC,IAAI,CAAChC;UAAI;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACNvN,OAAA;UAAQ4H,SAAS,EAAC,cAAc;UAAC4F,OAAO,EAAEA,CAAA,KAAM9M,gBAAgB,CAAC,KAAK,CAAE;UAAAuL,QAAA,EAAC;QAAC;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eAENvN,OAAA;QAAK4H,SAAS,EAAC,eAAe;QAAAqE,QAAA,gBAC5BjM,OAAA;UAAK4H,SAAS,EAAC,WAAW;UAAAqE,QAAA,gBACxBjM,OAAA;YAAK4H,SAAS,EAAC,+BAA+B;YAAAqE,QAAA,gBAC5CjM,OAAA;cAAAiM,QAAA,EAAI;YAAQ;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBvN,OAAA;cAAK4H,SAAS,EAAC,eAAe;cAAAqE,QAAA,gBAC5BjM,OAAA;gBAAK4H,SAAS,EAAC,gBAAgB;gBAAAqE,QAAA,gBAC7BjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAE;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACtCvN,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,GAAE1L,cAAc,CAACwF,IAAI,CAAC/B,QAAQ,CAAC1C,CAAC,CAACmM,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;gBAAA;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9E,CAAC,eACNvN,OAAA;gBAAK4H,SAAS,EAAC,gBAAgB;gBAAAqE,QAAA,gBAC7BjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAE;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACtCvN,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,GAAE1L,cAAc,CAACwF,IAAI,CAAC/B,QAAQ,CAACzC,CAAC,CAACkM,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;gBAAA;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9E,CAAC,eACNvN,OAAA;gBAAK4H,SAAS,EAAC,gBAAgB;gBAAAqE,QAAA,gBAC7BjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAE;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACtCvN,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,GAAE1L,cAAc,CAACwF,IAAI,CAAC/B,QAAQ,CAACxC,CAAC,CAACiM,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;gBAAA;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9E,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENvN,OAAA;YAAK4H,SAAS,EAAC,iCAAiC;YAAAqE,QAAA,gBAC9CjM,OAAA;cAAAiM,QAAA,EAAI;YAAU;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBvN,OAAA;cAAK4H,SAAS,EAAC,eAAe;cAAAqE,QAAA,gBAC5BjM,OAAA;gBAAK4H,SAAS,EAAC,gBAAgB;gBAAAqE,QAAA,gBAC7BjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAK;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACzCvN,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAEnC,IAAI,CAAC4D;gBAAI;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACNvN,OAAA;gBAAK4H,SAAS,EAAC,gBAAgB;gBAAAqE,QAAA,gBAC7BjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAO;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC3CvN,OAAA;kBAAM4H,SAAS,EAAE,cAAcqF,WAAW,EAAG;kBAAAhB,QAAA,EAAEnC,IAAI,CAAC/C;gBAAM;kBAAAqG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNvN,OAAA;cAAK4H,SAAS,EAAC,eAAe;cAAAqE,QAAA,eAC5BjM,OAAA;gBAAK4H,SAAS,EAAC,2BAA2B;gBAAAqE,QAAA,gBACxCjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAa;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACjDvN,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAES,UAAU,CAAC5C,IAAI,CAAC6D,WAAW;gBAAC;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACNvN,OAAA;cAAK4H,SAAS,EAAC,eAAe;cAAAqE,QAAA,eAC5BjM,OAAA;gBAAK4H,SAAS,EAAC,2BAA2B;gBAAAqE,QAAA,gBACxCjM,OAAA;kBAAM4H,SAAS,EAAC,YAAY;kBAAAqE,QAAA,EAAC;gBAAY;kBAAAmB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAChDvN,OAAA;kBAAM4H,SAAS,EAAC,wBAAwB;kBAAAqE,QAAA,EAAEnC,IAAI,CAAC8D;gBAAW;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/D;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENvN,OAAA;YAAK4H,SAAS,EAAC,+BAA+B;YAAAqE,QAAA,gBAC5CjM,OAAA;cAAAiM,QAAA,EAAI;YAAe;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACxBvN,OAAA;cAAK4H,SAAS,EAAC,YAAY;cAAAqE,QAAA,EACxBnC,IAAI,CAAC+D,QAAQ,CAACpE,GAAG,CAAC,CAACqE,KAAK,EAAEC,KAAK,kBAC9B/N,OAAA;gBAEE4H,SAAS,EAAC,WAAW;gBACrBG,KAAK,EAAE;kBACL7E,MAAM,EAAE,GAAG4K,KAAK,GAAG;kBACnBZ,eAAe,EAAEa,KAAK,KAAKjE,IAAI,CAAC+D,QAAQ,CAAChD,MAAM,GAAG,CAAC,GACjD,IAAIf,IAAI,CAACpE,KAAK,CAACyH,QAAQ,CAAC,EAAE,CAAC,EAAE,GAAG;gBACpC,CAAE;gBAAAlB,QAAA,eAEFjM,OAAA;kBAAM4H,SAAS,EAAC,SAAS;kBAAAqE,QAAA,EAAE6B;gBAAK;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC,GARnCQ,KAAK;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OASP,CACN;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNvN,OAAA;cAAK4H,SAAS,EAAC,cAAc;cAAAqE,QAAA,gBAC3BjM,OAAA;gBAAAiM,QAAA,EAAM;cAAI;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACjBvN,OAAA;gBAAAiM,QAAA,EAAM;cAAO;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENvN,OAAA;UAAK4H,SAAS,EAAC,gBAAgB;UAAAqE,QAAA,gBAC7BjM,OAAA;YAAQ4H,SAAS,EAAC,eAAe;YAAAqE,QAAA,gBAC/BjM,OAAA;cAAG4H,SAAS,EAAC;YAAc;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChCvN,OAAA;cAAAiM,QAAA,EAAM;YAAO;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACTvN,OAAA;YAAQ4H,SAAS,EAAC,eAAe;YAAAqE,QAAA,gBAC/BjM,OAAA;cAAG4H,SAAS,EAAC;YAAc;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChCvN,OAAA;cAAAiM,QAAA,EAAM;YAAO;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACTvN,OAAA;YAAQ4H,SAAS,EAAC,eAAe;YAAAqE,QAAA,gBAC/BjM,OAAA;cAAG4H,SAAS,EAAC;YAAY;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9BvN,OAAA;cAAAiM,QAAA,EAAM;YAAK;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,oBACEhO,OAAA;MAAK4H,SAAS,EAAC,sBAAsB;MAAAqE,QAAA,gBACnCjM,OAAA;QAAAiM,QAAA,EAAG;MAAiE;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxEvN,OAAA;QAAQ4H,SAAS,EAAC,gBAAgB;QAAAqE,QAAA,EAAC;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAEV,CAAC;;EAED;EACA,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,aAAa,GAAG7N,OAAO,CAAC8N,MAAM,CAACzD,GAAG,IAAIA,GAAG,CAACZ,IAAI,CAAC/C,MAAM,KAAK,QAAQ,CAAC,CAAC8D,MAAM;IAChF,MAAMuD,cAAc,GAAG/N,OAAO,CAAC8N,MAAM,CAACzD,GAAG,IAAIA,GAAG,CAACZ,IAAI,CAAC/C,MAAM,KAAK,SAAS,CAAC,CAAC8D,MAAM;IAClF,MAAMwD,eAAe,GAAGhO,OAAO,CAAC8N,MAAM,CAACzD,GAAG,IAAIA,GAAG,CAACZ,IAAI,CAAC/C,MAAM,KAAK,UAAU,CAAC,CAAC8D,MAAM;IAEpF,oBACE7K,OAAA;MAAK4H,SAAS,EAAC,oBAAoB;MAAAqE,QAAA,eACjCjM,OAAA;QAAK4H,SAAS,EAAC,gBAAgB;QAAAqE,QAAA,gBAC7BjM,OAAA;UAAK4H,SAAS,EAAC,cAAc;UAAAqE,QAAA,gBAC3BjM,OAAA;YAAM4H,SAAS,EAAC,cAAc;YAAAqE,QAAA,EAAE5L,OAAO,CAACwK;UAAM;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtDvN,OAAA;YAAM4H,SAAS,EAAC,aAAa;YAAAqE,QAAA,EAAC;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACNvN,OAAA;UAAK4H,SAAS,EAAC,mBAAmB;UAAAqE,QAAA,gBAChCjM,OAAA;YAAK4H,SAAS,EAAC,cAAc;YAAAqE,QAAA,gBAC3BjM,OAAA;cAAK4H,SAAS,EAAC;YAA0B;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAChDvN,OAAA;cAAAiM,QAAA,EAAOiC;YAAa;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACNvN,OAAA;YAAK4H,SAAS,EAAC,cAAc;YAAAqE,QAAA,gBAC3BjM,OAAA;cAAK4H,SAAS,EAAC;YAA2B;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjDvN,OAAA;cAAAiM,QAAA,EAAOmC;YAAc;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACNvN,OAAA;YAAK4H,SAAS,EAAC,cAAc;YAAAqE,QAAA,gBAC3BjM,OAAA;cAAK4H,SAAS,EAAC;YAA4B;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAClDvN,OAAA;cAAAiM,QAAA,EAAOoC;YAAe;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,oBACEvN,OAAA;IAAK4H,SAAS,EAAC,cAAc;IAAAqE,QAAA,gBAE3BjM,OAAA;MACEsO,GAAG,EAAElO,QAAS;MACdwH,SAAS,EAAC,aAAa;MACvB2G,QAAQ;MACRC,WAAW;MACXC,KAAK;IAAA;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGFvN,OAAA;MAAKsO,GAAG,EAAEnO,QAAS;MAACyH,SAAS,EAAC;IAAU;MAAAwF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAG/CvN,OAAA;MAAK4H,SAAS,EAAC,UAAU;MAAAqE,QAAA,GACtBe,eAAe,CAAC,CAAC,EACjBiB,eAAe,CAAC,CAAC,EACjBD,kBAAkB,CAAC,CAAC,EAGpB,CAACrN,YAAY,iBACZX,OAAA;QAAK4H,SAAS,EAAC,4BAA4B;QAAAqE,QAAA,gBACzCjM,OAAA;UAAAiM,QAAA,EAAI;QAAsB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BvN,OAAA;UAAAiM,QAAA,EAAG;QAA4D;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnEvN,OAAA;UACE4H,SAAS,EAAC,mBAAmB;UAC7B4F,OAAO,EAAE/L,mBAAoB;UAAAwK,QAAA,EAC9B;QAED;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrN,EAAA,CA5oBID,oBAAoB;AAAAyO,EAAA,GAApBzO,oBAAoB;AA8oB1B,eAAeA,oBAAoB;AAAC,IAAAyO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}