{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyPC\\\\Projects\\\\Parijat Controlwares\\\\AR Tags'\\\\ar-object-visualizer\\\\src\\\\ARVisualizer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { sampleObjects } from './sampleData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImprovedARVisualizer = () => {\n  _s();\n  const mountRef = useRef(null);\n  const videoRef = useRef(null);\n  const [objects, setObjects] = useState([]);\n  const [selectedObject, setSelectedObject] = useState(null);\n  const [showDataPanel, setShowDataPanel] = useState(false);\n  const [cameraActive, setCameraActive] = useState(false);\n  const [videoStream, setVideoStream] = useState(null);\n  const [isArSupported, setIsArSupported] = useState(false);\n\n  // References for tracking\n  const positionRef = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  const rotationRef = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  const lastAcceleration = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  const velocity = useRef({\n    x: 0,\n    y: 0,\n    z: 0\n  });\n  const lastTimestamp = useRef(0);\n  const arSessionRef = useRef(null);\n\n  // Check for WebXR support on component mount\n  useEffect(() => {\n    // Check for WebXR support\n    if ('xr' in navigator) {\n      navigator.xr.isSessionSupported('immersive-ar').then(supported => {\n        setIsArSupported(supported);\n      });\n    }\n\n    // Fallback to DeviceMotion/Orientation if WebXR is not available\n    if (window.DeviceMotionEvent && window.DeviceOrientationEvent) {\n      setIsArSupported(true);\n    }\n\n    // Request camera access\n    requestCameraAccess();\n\n    // Request motion and orientation permissions\n    requestSensorPermissions();\n    return () => {\n      if (arSessionRef.current) {\n        arSessionRef.current.end();\n      }\n      stopCameraStream();\n    };\n  }, []);\n\n  // Request sensor permissions\n  const requestSensorPermissions = async () => {\n    // Request DeviceOrientation permission on iOS 13+\n    if (typeof DeviceOrientationEvent !== 'undefined' && typeof DeviceOrientationEvent.requestPermission === 'function') {\n      try {\n        const permissionState = await DeviceOrientationEvent.requestPermission();\n        if (permissionState === 'granted') {\n          window.addEventListener('deviceorientation', handleOrientation);\n        }\n      } catch (error) {\n        console.error(\"Error requesting orientation permission:\", error);\n      }\n    } else {\n      // Non-iOS or older iOS devices don't need explicit permission\n      window.addEventListener('deviceorientation', handleOrientation);\n    }\n\n    // Request DeviceMotion permission on iOS 13+\n    if (typeof DeviceMotionEvent !== 'undefined' && typeof DeviceMotionEvent.requestPermission === 'function') {\n      try {\n        const permissionState = await DeviceMotionEvent.requestPermission();\n        if (permissionState === 'granted') {\n          window.addEventListener('devicemotion', handleMotion);\n        }\n      } catch (error) {\n        console.error(\"Error requesting motion permission:\", error);\n      }\n    } else {\n      // Non-iOS or older iOS devices don't need explicit permission\n      window.addEventListener('devicemotion', handleMotion);\n    }\n  };\n\n  // Handle device orientation\n  const handleOrientation = event => {\n    // Update rotation reference with device orientation data\n    rotationRef.current = {\n      x: THREE.MathUtils.degToRad(event.beta || 0),\n      // x-axis rotation [deg]\n      y: THREE.MathUtils.degToRad(event.alpha || 0),\n      // y-axis rotation [deg]\n      z: THREE.MathUtils.degToRad(event.gamma || 0) // z-axis rotation [deg]\n    };\n  };\n\n  // Handle device motion for position tracking\n  const handleMotion = event => {\n    if (!event.accelerationIncludingGravity) return;\n    const now = performance.now();\n    const dt = (now - lastTimestamp.current) / 1000; // time delta in seconds\n    lastTimestamp.current = now;\n    if (dt === 0) return; // Avoid division by zero\n\n    // Simple high-pass filter to remove gravity and get linear acceleration\n    const accel = {\n      x: event.accelerationIncludingGravity.x - lastAcceleration.current.x,\n      y: event.accelerationIncludingGravity.y - lastAcceleration.current.y,\n      z: event.accelerationIncludingGravity.z - lastAcceleration.current.z\n    };\n\n    // Apply low-pass filter to reduce noise\n    const alpha = 0.8;\n    accel.x = accel.x * alpha + lastAcceleration.current.x * (1 - alpha);\n    accel.y = accel.y * alpha + lastAcceleration.current.y * (1 - alpha);\n    accel.z = accel.z * alpha + lastAcceleration.current.z * (1 - alpha);\n\n    // Update last acceleration values\n    lastAcceleration.current = {\n      ...accel\n    };\n\n    // Apply a dead zone to filter out tiny movements (noise)\n    const deadZone = 0.1;\n    if (Math.abs(accel.x) < deadZone) accel.x = 0;\n    if (Math.abs(accel.y) < deadZone) accel.y = 0;\n    if (Math.abs(accel.z) < deadZone) accel.z = 0;\n\n    // Update velocity using acceleration\n    velocity.current.x += accel.x * dt;\n    velocity.current.y += accel.y * dt;\n    velocity.current.z += accel.z * dt;\n\n    // Apply damping to velocity to prevent drift\n    const damping = 0.95;\n    velocity.current.x *= damping;\n    velocity.current.y *= damping;\n    velocity.current.z *= damping;\n\n    // Update position based on velocity\n    positionRef.current.x += velocity.current.x * dt * 0.1; // Scale factor to control movement speed\n    positionRef.current.y += velocity.current.y * dt * 0.1;\n    positionRef.current.z += velocity.current.z * dt * 0.1;\n  };\n\n  // Start a WebXR session if available\n  const startARSession = async () => {\n    if (!navigator.xr) {\n      console.log(\"WebXR not supported in this browser\");\n      return;\n    }\n    try {\n      const session = await navigator.xr.requestSession('immersive-ar', {\n        requiredFeatures: ['local-floor'],\n        // Use real-world floor as reference\n        optionalFeatures: ['dom-overlay'],\n        domOverlay: {\n          root: document.getElementById('ar-overlay')\n        }\n      });\n      arSessionRef.current = session;\n\n      // Set up WebXR session\n      // This is a simplified version; a full implementation would need more setup\n      session.addEventListener('end', () => {\n        arSessionRef.current = null;\n      });\n      console.log(\"WebXR AR session started\");\n    } catch (error) {\n      console.error(\"Error starting AR session:\", error);\n    }\n  };\n\n  // Request camera access\n  const requestCameraAccess = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\",\n          width: {\n            ideal: window.innerWidth\n          },\n          height: {\n            ideal: window.innerHeight\n          }\n        }\n      });\n      setVideoStream(stream);\n      setCameraActive(true);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error(\"Error accessing camera:\", error);\n      alert(\"Could not access the camera. Please check permissions.\");\n    }\n  };\n\n  // Stop camera stream\n  const stopCameraStream = () => {\n    if (videoStream) {\n      videoStream.getTracks().forEach(track => track.stop());\n      setVideoStream(null);\n      setCameraActive(false);\n    }\n  };\n\n  // Scene setup\n  useEffect(() => {\n    if (!cameraActive) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n\n    // Initial camera position\n    camera.position.set(0, 1.6, 0); // Approximate standing eye height\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0); // Transparent background\n\n    // Add renderer to DOM\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Lighting\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n    directionalLight.position.set(1, 1, 1);\n    scene.add(directionalLight);\n\n    // Add ground grid for reference\n    const gridHelper = new THREE.GridHelper(20, 20, 0x555555, 0x333333);\n    gridHelper.position.y = -0.1; // Just below eye level\n    gridHelper.material.opacity = 0.4;\n    gridHelper.material.transparent = true;\n    scene.add(gridHelper);\n\n    // Factory floor markers - create a more realistic factory environment\n    createFactoryEnvironment(scene);\n\n    // Create sensor objects based on sampleData\n    const objectsInScene = [];\n    sampleObjects.forEach(objectData => {\n      // Create sensor object\n      const sensorObject = createSensorObject(objectData);\n      scene.add(sensorObject.mesh);\n      objectsInScene.push(sensorObject);\n    });\n    setObjects(objectsInScene);\n\n    // Raycaster for object selection\n    const raycaster = new THREE.Raycaster();\n    const pointer = new THREE.Vector2();\n\n    // Handle tap/click\n    const handleTap = event => {\n      // Calculate pointer position in normalized device coordinates (-1 to +1)\n      pointer.x = event.clientX / window.innerWidth * 2 - 1;\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n      // Update the raycaster with the camera and pointer position\n      raycaster.setFromCamera(pointer, camera);\n\n      // Get list of intersected objects\n      const intersects = raycaster.intersectObjects(scene.children, true);\n\n      // Check if we hit something\n      if (intersects.length > 0) {\n        // Find the sensor object from our intersected object\n        let found = false;\n        for (let i = 0; i < intersects.length; i++) {\n          const intersectedObject = intersects[i].object;\n\n          // Find the root object (the sensor)\n          let rootObject = intersectedObject;\n          while (rootObject.parent && rootObject.parent !== scene) {\n            rootObject = rootObject.parent;\n          }\n\n          // Find this object in our list\n          const selectedObj = objectsInScene.find(obj => obj.mesh === rootObject);\n          if (selectedObj) {\n            setSelectedObject(selectedObj);\n            setShowDataPanel(true);\n            found = true;\n\n            // Hide all label sprites\n            objectsInScene.forEach(obj => {\n              if (obj.labelSprite) {\n                obj.labelSprite.visible = obj === selectedObj;\n              }\n            });\n            break;\n          }\n        }\n\n        // If we didn't find a sensor, hide the data panel\n        if (!found) {\n          setShowDataPanel(false);\n\n          // Hide all label sprites\n          objectsInScene.forEach(obj => {\n            if (obj.labelSprite) {\n              obj.labelSprite.visible = false;\n            }\n          });\n        }\n      } else {\n        // Clear selection if we hit nothing\n        setShowDataPanel(false);\n\n        // Hide all label sprites\n        objectsInScene.forEach(obj => {\n          if (obj.labelSprite) {\n            obj.labelSprite.visible = false;\n          }\n        });\n      }\n    };\n\n    // Add event listeners\n    window.addEventListener('click', handleTap);\n    window.addEventListener('touchend', e => handleTap(e.changedTouches[0]));\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Animation loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Update camera rotation from device orientation\n      if (rotationRef.current) {\n        // Create a rotation quaternion from Euler angles\n        const quaternion = new THREE.Quaternion();\n        const euler = new THREE.Euler(rotationRef.current.x, rotationRef.current.y, rotationRef.current.z, 'YXZ' // This order matters for mobile orientation\n        );\n        quaternion.setFromEuler(euler);\n\n        // Apply rotation to camera\n        camera.quaternion.copy(quaternion);\n      }\n\n      // Update camera position from estimated movement\n      if (positionRef.current) {\n        // Convert device movement to camera movement\n        // We need to apply camera's rotation to the movement vector\n\n        // Create direction vector from our position reference\n        const movement = new THREE.Vector3(positionRef.current.x, positionRef.current.y, positionRef.current.z);\n\n        // Apply movement based on camera's rotation\n        movement.applyQuaternion(camera.quaternion);\n\n        // Update camera position\n        camera.position.add(movement);\n      }\n\n      // Update all objects\n      objectsInScene.forEach(obj => {\n        // Make labels always face the camera\n        if (obj.labelSprite) {\n          obj.labelSprite.lookAt(camera.position);\n        }\n\n        // Update pulse animations\n        if (obj.pulse) {\n          const pulse = obj.pulse;\n          const pulseData = pulse.userData;\n\n          // Update scale based on pulse direction\n          if (pulseData.pulseDirection === 1) {\n            pulse.scale.x += pulseData.pulseSpeed;\n            pulse.scale.y += pulseData.pulseSpeed;\n            pulse.scale.z += pulseData.pulseSpeed;\n            if (pulse.scale.x >= pulseData.maxScale) {\n              pulseData.pulseDirection = -1;\n            }\n          } else {\n            pulse.scale.x -= pulseData.pulseSpeed;\n            pulse.scale.y -= pulseData.pulseSpeed;\n            pulse.scale.z -= pulseData.pulseSpeed;\n            if (pulse.scale.x <= pulseData.minScale) {\n              pulseData.pulseDirection = 1;\n            }\n          }\n\n          // Update opacity\n          pulse.material.opacity = 0.5 - (pulse.scale.x - pulseData.minScale) / (pulseData.maxScale - pulseData.minScale) * 0.4;\n        }\n\n        // Rotate status indicators\n        if (obj.statusIndicator) {\n          obj.statusIndicator.rotation.y += 0.01;\n        }\n      });\n\n      // Render the scene\n      renderer.render(scene, camera);\n    };\n\n    // Start animation loop\n    const animationId = requestAnimationFrame(animate);\n\n    // Cleanup function\n    return () => {\n      cancelAnimationFrame(animationId);\n      window.removeEventListener('click', handleTap);\n      window.removeEventListener('touchend', handleTap);\n      window.removeEventListener('resize', handleResize);\n\n      // Clean up Three.js resources\n      scene.traverse(object => {\n        if (object.geometry) object.geometry.dispose();\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            object.material.forEach(material => material.dispose());\n          } else {\n            object.material.dispose();\n          }\n        }\n      });\n      if (mountRef.current && mountRef.current.contains(renderer.domElement)) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n\n      // Remove event listeners\n      window.removeEventListener('deviceorientation', handleOrientation);\n      window.removeEventListener('devicemotion', handleMotion);\n    };\n  }, [cameraActive]);\n\n  // Create a sensor visualization object\n  const createSensorObject = sensorData => {\n    // Main group for the sensor\n    const sensorGroup = new THREE.Group();\n\n    // Create the main sensor body\n    const geometry = new THREE.SphereGeometry(0.2, 32, 32);\n    const material = new THREE.MeshStandardMaterial({\n      color: sensorData.color,\n      emissive: sensorData.color,\n      emissiveIntensity: 0.4,\n      roughness: 0.3,\n      metalness: 0.8\n    });\n    const sensorMesh = new THREE.Mesh(geometry, material);\n\n    // Position the sensor at its specified location\n    sensorMesh.position.set(sensorData.position.x, sensorData.position.y, sensorData.position.z);\n\n    // Add the sensor to the group\n    sensorGroup.add(sensorMesh);\n\n    // Add pulse effect\n    const pulseGeometry = new THREE.SphereGeometry(0.25, 32, 32);\n    const pulseMaterial = new THREE.MeshBasicMaterial({\n      color: sensorData.color,\n      transparent: true,\n      opacity: 0.4\n    });\n    const pulse = new THREE.Mesh(pulseGeometry, pulseMaterial);\n\n    // Configure pulse based on sensor status\n    let pulseSpeed = 0.01;\n    let maxScale = 1.5;\n    switch (sensorData.status) {\n      case \"Critical\":\n        pulseSpeed = 0.03;\n        maxScale = 2.0;\n        break;\n      case \"Warning\":\n        pulseSpeed = 0.02;\n        maxScale = 1.8;\n        break;\n      case \"Offline\":\n        pulseSpeed = 0.005;\n        maxScale = 1.2;\n        break;\n      default:\n        // Active\n        pulseSpeed = 0.01;\n        maxScale = 1.5;\n    }\n    pulse.userData = {\n      pulseDirection: 1,\n      minScale: 1,\n      maxScale: maxScale,\n      pulseSpeed: pulseSpeed\n    };\n    sensorMesh.add(pulse);\n\n    // Add status indicator\n    const statusGeometry = new THREE.BoxGeometry(0.05, 0.05, 0.05);\n    const statusColor = getStatusColor(sensorData.status);\n    const statusMaterial = new THREE.MeshBasicMaterial({\n      color: statusColor\n    });\n    const statusIndicator = new THREE.Mesh(statusGeometry, statusMaterial);\n    statusIndicator.position.set(0, 0.3, 0);\n    sensorMesh.add(statusIndicator);\n\n    // Create a text sprite for the label\n    const labelSprite = createLabelSprite(sensorData.name, sensorData.status);\n    labelSprite.position.set(0, 0.5, 0);\n    labelSprite.visible = false; // Hidden by default\n    sensorMesh.add(labelSprite);\n\n    // Add an optional cable/pipe connecting to the ground\n    if (sensorData.position.y > 0.3) {\n      const cableGeometry = new THREE.CylinderGeometry(0.02, 0.02, sensorData.position.y, 8);\n      const cableMaterial = new THREE.MeshStandardMaterial({\n        color: 0x444444,\n        roughness: 0.8,\n        metalness: 0.3\n      });\n      const cable = new THREE.Mesh(cableGeometry, cableMaterial);\n      cable.position.set(0, -sensorData.position.y / 2, 0);\n      sensorMesh.add(cable);\n    }\n    return {\n      mesh: sensorGroup,\n      data: sensorData,\n      pulse: pulse,\n      statusIndicator: statusIndicator,\n      labelSprite: labelSprite\n    };\n  };\n\n  // Create a label sprite with status indicator\n  const createLabelSprite = (name, status) => {\n    // Create canvas for the sprite texture\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = 256;\n    canvas.height = 128;\n\n    // Colors based on status\n    let statusColor;\n    switch (status) {\n      case \"Critical\":\n        statusColor = \"#e74c3c\";\n        break;\n      case \"Warning\":\n        statusColor = \"#f39c12\";\n        break;\n      case \"Offline\":\n        statusColor = \"#7f8c8d\";\n        break;\n      default:\n        statusColor = \"#2ecc71\";\n      // Active\n    }\n\n    // Background with rounded corners\n    context.fillStyle = 'rgba(25, 28, 36, 0.85)';\n    context.strokeStyle = statusColor;\n    context.lineWidth = 3;\n    const rectWidth = 210;\n    const rectHeight = 50;\n    const cornerRadius = 8;\n\n    // Draw rounded rectangle\n    context.beginPath();\n    context.moveTo(20 + cornerRadius, 10);\n    context.lineTo(20 + rectWidth - cornerRadius, 10);\n    context.quadraticCurveTo(20 + rectWidth, 10, 20 + rectWidth, 10 + cornerRadius);\n    context.lineTo(20 + rectWidth, 10 + rectHeight - cornerRadius);\n    context.quadraticCurveTo(20 + rectWidth, 10 + rectHeight, 20 + rectWidth - cornerRadius, 10 + rectHeight);\n    context.lineTo(20 + cornerRadius, 10 + rectHeight);\n    context.quadraticCurveTo(20, 10 + rectHeight, 20, 10 + rectHeight - cornerRadius);\n    context.lineTo(20, 10 + cornerRadius);\n    context.quadraticCurveTo(20, 10, 20 + cornerRadius, 10);\n    context.closePath();\n\n    // Fill and stroke\n    context.fill();\n    context.stroke();\n\n    // Add status indicator\n    context.fillStyle = statusColor;\n    context.beginPath();\n    context.arc(35, 35, 6, 0, Math.PI * 2);\n    context.fill();\n\n    // Add text\n    context.font = 'bold 20px Arial';\n    context.fillStyle = 'white';\n    context.textAlign = 'left';\n    context.textBaseline = 'middle';\n    context.fillText(name, 50, 35);\n\n    // Create sprite from texture\n    const texture = new THREE.CanvasTexture(canvas);\n    const spriteMaterial = new THREE.SpriteMaterial({\n      map: texture,\n      transparent: true\n    });\n    const sprite = new THREE.Sprite(spriteMaterial);\n    sprite.scale.set(1.0, 0.5, 1);\n    return sprite;\n  };\n\n  // Create a factory environment with visual markers\n  const createFactoryEnvironment = scene => {\n    // Add walls to create a factory-like space\n    const wallMaterial = new THREE.MeshStandardMaterial({\n      color: 0x888888,\n      roughness: 0.8,\n      metalness: 0.2\n    });\n\n    // Floor\n    const floorGeometry = new THREE.PlaneGeometry(20, 20);\n    const floorMaterial = new THREE.MeshStandardMaterial({\n      color: 0x666666,\n      roughness: 0.9,\n      metalness: 0.1\n    });\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\n    floor.rotation.x = -Math.PI / 2;\n    floor.position.y = -0.1;\n    scene.add(floor);\n\n    // Add some factory equipment (simplified shapes)\n\n    // Machine 1 - Box shape\n    const machine1Geometry = new THREE.BoxGeometry(1.5, 1.2, 0.8);\n    const machine1Material = new THREE.MeshStandardMaterial({\n      color: 0x3498db,\n      roughness: 0.7,\n      metalness: 0.3\n    });\n    const machine1 = new THREE.Mesh(machine1Geometry, machine1Material);\n    machine1.position.set(-3, 0.6, -2);\n    scene.add(machine1);\n\n    // Machine 2 - Cylinder shape\n    const machine2Geometry = new THREE.CylinderGeometry(0.5, 0.5, 1.5, 16);\n    const machine2Material = new THREE.MeshStandardMaterial({\n      color: 0xe74c3c,\n      roughness: 0.6,\n      metalness: 0.4\n    });\n    const machine2 = new THREE.Mesh(machine2Geometry, machine2Material);\n    machine2.position.set(3, 0.75, -1);\n    scene.add(machine2);\n\n    // Workbench\n    const workbenchGeometry = new THREE.BoxGeometry(2, 0.1, 1);\n    const workbenchLegsGeometry = new THREE.BoxGeometry(0.1, 0.7, 0.1);\n    const workbenchMaterial = new THREE.MeshStandardMaterial({\n      color: 0x795548,\n      roughness: 0.9,\n      metalness: 0.1\n    });\n    const workbenchGroup = new THREE.Group();\n    const workbenchTop = new THREE.Mesh(workbenchGeometry, workbenchMaterial);\n    workbenchTop.position.set(0, 0.7, 0);\n    workbenchGroup.add(workbenchTop);\n\n    // Add legs\n    const leg1 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\n    leg1.position.set(-0.9, 0.35, -0.4);\n    workbenchGroup.add(leg1);\n    const leg2 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\n    leg2.position.set(-0.9, 0.35, 0.4);\n    workbenchGroup.add(leg2);\n    const leg3 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\n    leg3.position.set(0.9, 0.35, -0.4);\n    workbenchGroup.add(leg3);\n    const leg4 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\n    leg4.position.set(0.9, 0.35, 0.4);\n    workbenchGroup.add(leg4);\n    workbenchGroup.position.set(0, 0, 2);\n    scene.add(workbenchGroup);\n\n    // Add safety/zone markings on floor\n    const createFloorMarking = (width, depth, color, position) => {\n      const markingGeometry = new THREE.PlaneGeometry(width, depth);\n      const markingMaterial = new THREE.MeshBasicMaterial({\n        color: color,\n        transparent: true,\n        opacity: 0.7,\n        side: THREE.DoubleSide\n      });\n      const marking = new THREE.Mesh(markingGeometry, markingMaterial);\n      marking.rotation.x = -Math.PI / 2;\n      marking.position.set(position.x, 0.01, position.z); // Slightly above floor\n      scene.add(marking);\n    };\n\n    // Add zone markings\n    createFloorMarking(2, 2, 0xf1c40f, {\n      x: -3,\n      z: -2\n    }); // Yellow zone around machine 1\n    createFloorMarking(1.5, 1.5, 0xe74c3c, {\n      x: 3,\n      z: -1\n    }); // Red zone around machine 2\n    createFloorMarking(2.5, 1.5, 0x2ecc71, {\n      x: 0,\n      z: 2\n    }); // Green zone around workbench\n\n    // Add some pipes along walls or ceiling\n    const createPipe = (start, end, radius, color) => {\n      // Calculate pipe length and orientation\n      const direction = new THREE.Vector3().subVectors(end, start);\n      const length = direction.length();\n\n      // Create pipe geometry\n      const pipeGeometry = new THREE.CylinderGeometry(radius, radius, length, 8);\n      const pipeMaterial = new THREE.MeshStandardMaterial({\n        color: color,\n        roughness: 0.7,\n        metalness: 0.3\n      });\n\n      // Position and orient the pipe\n      const pipe = new THREE.Mesh(pipeGeometry, pipeMaterial);\n\n      // Position at midpoint\n      pipe.position.copy(start).add(direction.multiplyScalar(0.5));\n\n      // Orient along direction\n      pipe.quaternion.setFromUnitVectors(new THREE.Vector3(0, 1, 0),\n      // Default cylinder orientation is along Y\n      direction.clone().normalize());\n      scene.add(pipe);\n    };\n\n    // Add some pipes\n    createPipe(new THREE.Vector3(-4, 2, -3), new THREE.Vector3(4, 2, -3), 0.05, 0x3498db); // Blue pipe\n\n    createPipe(new THREE.Vector3(-4, 2, 3), new THREE.Vector3(4, 2, 3), 0.05, 0xe74c3c); // Red pipe\n\n    createPipe(new THREE.Vector3(-4, 2, -3), new THREE.Vector3(-4, 2, 3), 0.05, 0x2ecc71); // Green pipe\n\n    return {\n      floor,\n      machine1,\n      machine2,\n      workbenchGroup\n    };\n  };\n\n  // Helper function to get status color\n  const getStatusColor = status => {\n    switch (status) {\n      case \"Critical\":\n        return 0xff0000;\n      case \"Warning\":\n        return 0xffcc00;\n      case \"Offline\":\n        return 0x888888;\n      default:\n        return 0x00ff00;\n      // Active\n    }\n  };\n\n  // Format date string nicely\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString();\n  };\n\n  // Get status indicator class\n  const getStatusClass = status => {\n    switch (status) {\n      case \"Critical\":\n        return \"status-critical\";\n      case \"Warning\":\n        return \"status-warning\";\n      case \"Offline\":\n        return \"status-offline\";\n      default:\n        return \"status-active\";\n    }\n  };\n\n  // Reset position tracking\n  const resetTracking = () => {\n    positionRef.current = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    velocity.current = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    lastAcceleration.current = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n  };\n\n  // Render data panel for selected sensor\n  const renderDataPanel = () => {\n    if (!selectedObject || !showDataPanel) return null;\n    const {\n      data\n    } = selectedObject;\n    const statusClass = getStatusClass(data.status);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-panel card-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-header\",\n        style: {\n          backgroundColor: `#${data.color.toString(16)}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `status-indicator ${statusClass}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: () => setShowDataPanel(false),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section location-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"X:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [data.position.x.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Y:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 856,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [data.position.y.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 857,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 855,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Z:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 860,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: [data.position.z.toFixed(2), \" m\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section properties-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Properties\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: data.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Status:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `data-value ${statusClass}`,\n                  children: data.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell full-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Last Updated:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 880,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value\",\n                  children: formatDate(data.lastUpdated)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-grid-row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-grid-cell full-width\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-label\",\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 886,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"data-value description\",\n                  children: data.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 887,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-section readings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Recent Readings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mini-chart\",\n              children: data.readings.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart-bar\",\n                style: {\n                  height: `${value}%`,\n                  backgroundColor: index === data.readings.length - 1 ? `#${data.color.toString(16)}` : '#3498db'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltip\",\n                  children: value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 905,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-legend\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Past\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Present\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 923,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"icon-share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render status bar\n  const renderStatusBar = () => {\n    if (!objects.length) return null;\n    const activeObjects = objects.filter(obj => obj.data.status === \"Active\").length;\n    const warningObjects = objects.filter(obj => obj.data.status === \"Warning\").length;\n    const criticalObjects = objects.filter(obj => obj.data.status === \"Critical\").length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-bar card-ui\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"object-count\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-number\",\n            children: objects.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"count-label\",\n            children: \"Sensors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicators\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 952,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: activeObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 953,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: warningObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"status-dot status-critical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 960,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: criticalObjects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 959,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 950,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render compass for orientation\n  const renderCompass = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"compass-container card-ui\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"compass\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compass-north\",\n          children: \"N\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compass-east\",\n          children: \"E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compass-south\",\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compass-west\",\n          children: \"W\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compass-needle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render control buttons\n  const renderControls = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls-container card-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: resetTracking,\n        title: \"Reset Tracking\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon-reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control-button\",\n        onClick: () => setShowDataPanel(false),\n        title: \"Close All Panels\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"icon-close-all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 995,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render AR permissions view\n  const renderPermissionsView = () => {\n    if (cameraActive) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"permissions-view\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"permissions-card card-ui\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AR Factory Visualizer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application uses augmented reality to visualize and interact with sensors and equipment in your factory space.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-icon camera-icon\",\n            children: \"\\uD83D\\uDCF7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Camera Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Required to display virtual objects in your real environment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"permission-button\",\n              onClick: requestCameraAccess,\n              children: \"Grant Camera Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-icon motion-icon\",\n            children: \"\\uD83D\\uDCF1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"permission-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Motion Sensors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Required to track your position in the factory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"permission-button\",\n              onClick: requestSensorPermissions,\n              children: \"Grant Motion Access\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"permissions-note\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1039,\n              columnNumber: 16\n            }, this), \" For the best experience, please hold your device upright and move slowly through your space.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1012,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Main render function\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ar-container\",\n    children: [cameraActive && /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      className: \"camera-feed\",\n      autoPlay: true,\n      playsInline: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1051,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"ar-scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1061,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"ar-overlay\",\n      className: \"ar-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui-layer\",\n        children: [renderDataPanel(), renderStatusBar(), renderCompass(), renderControls(), cameraActive && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instructions card-ui\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Walk around to explore the factory. Tap on sensors to view details.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1075,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"dismiss-button\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1076,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1064,\n      columnNumber: 7\n    }, this), renderPermissionsView()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1048,\n    columnNumber: 5\n  }, this);\n};\n_s(ImprovedARVisualizer, \"LAdvcMcJ7OguRWYWvGbKMiqqK+8=\");\n_c = ImprovedARVisualizer;\nexport default ImprovedARVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ImprovedARVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","sampleObjects","jsxDEV","_jsxDEV","ImprovedARVisualizer","_s","mountRef","videoRef","objects","setObjects","selectedObject","setSelectedObject","showDataPanel","setShowDataPanel","cameraActive","setCameraActive","videoStream","setVideoStream","isArSupported","setIsArSupported","positionRef","x","y","z","rotationRef","lastAcceleration","velocity","lastTimestamp","arSessionRef","navigator","xr","isSessionSupported","then","supported","window","DeviceMotionEvent","DeviceOrientationEvent","requestCameraAccess","requestSensorPermissions","current","end","stopCameraStream","requestPermission","permissionState","addEventListener","handleOrientation","error","console","handleMotion","event","MathUtils","degToRad","beta","alpha","gamma","accelerationIncludingGravity","now","performance","dt","accel","deadZone","Math","abs","damping","startARSession","log","session","requestSession","requiredFeatures","optionalFeatures","domOverlay","root","document","getElementById","stream","mediaDevices","getUserMedia","video","facingMode","width","ideal","innerWidth","height","innerHeight","srcObject","alert","getTracks","forEach","track","stop","scene","Scene","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","setClearColor","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","gridHelper","GridHelper","material","opacity","transparent","createFactoryEnvironment","objectsInScene","objectData","sensorObject","createSensorObject","mesh","push","raycaster","Raycaster","pointer","Vector2","handleTap","clientX","clientY","setFromCamera","intersects","intersectObjects","children","length","found","i","intersectedObject","object","rootObject","parent","selectedObj","find","obj","labelSprite","visible","e","changedTouches","handleResize","aspect","updateProjectionMatrix","animate","requestAnimationFrame","quaternion","Quaternion","euler","Euler","setFromEuler","copy","movement","Vector3","applyQuaternion","lookAt","pulse","pulseData","userData","pulseDirection","scale","pulseSpeed","maxScale","minScale","statusIndicator","rotation","render","animationId","cancelAnimationFrame","removeEventListener","traverse","geometry","dispose","Array","isArray","contains","removeChild","sensorData","sensorGroup","Group","SphereGeometry","MeshStandardMaterial","color","emissive","emissiveIntensity","roughness","metalness","sensorMesh","Mesh","pulseGeometry","pulseMaterial","MeshBasicMaterial","status","statusGeometry","BoxGeometry","statusColor","getStatusColor","statusMaterial","createLabelSprite","name","cableGeometry","CylinderGeometry","cableMaterial","cable","data","canvas","createElement","context","getContext","fillStyle","strokeStyle","lineWidth","rectWidth","rectHeight","cornerRadius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","stroke","arc","PI","font","textAlign","textBaseline","fillText","texture","CanvasTexture","spriteMaterial","SpriteMaterial","map","sprite","Sprite","wallMaterial","floorGeometry","PlaneGeometry","floorMaterial","floor","machine1Geometry","machine1Material","machine1","machine2Geometry","machine2Material","machine2","workbenchGeometry","workbenchLegsGeometry","workbenchMaterial","workbenchGroup","workbenchTop","leg1","leg2","leg3","leg4","createFloorMarking","depth","markingGeometry","markingMaterial","side","DoubleSide","marking","createPipe","start","radius","direction","subVectors","pipeGeometry","pipeMaterial","pipe","multiplyScalar","setFromUnitVectors","clone","normalize","formatDate","dateString","date","Date","toLocaleString","getStatusClass","resetTracking","renderDataPanel","statusClass","className","style","backgroundColor","toString","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","type","lastUpdated","description","readings","value","index","renderStatusBar","activeObjects","filter","warningObjects","criticalObjects","renderCompass","renderControls","title","renderPermissionsView","ref","autoPlay","playsInline","muted","id","_c","$RefreshReg$"],"sources":["C:/MyPC/Projects/Parijat Controlwares/AR Tags'/ar-object-visualizer/src/ARVisualizer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as THREE from 'three';\r\nimport { sampleObjects } from './sampleData';\r\n\r\nconst ImprovedARVisualizer = () => {\r\n  const mountRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const [objects, setObjects] = useState([]);\r\n  const [selectedObject, setSelectedObject] = useState(null);\r\n  const [showDataPanel, setShowDataPanel] = useState(false);\r\n  const [cameraActive, setCameraActive] = useState(false);\r\n  const [videoStream, setVideoStream] = useState(null);\r\n  const [isArSupported, setIsArSupported] = useState(false);\r\n  \r\n  // References for tracking\r\n  const positionRef = useRef({ x: 0, y: 0, z: 0 });\r\n  const rotationRef = useRef({ x: 0, y: 0, z: 0 });\r\n  const lastAcceleration = useRef({ x: 0, y: 0, z: 0 });\r\n  const velocity = useRef({ x: 0, y: 0, z: 0 });\r\n  const lastTimestamp = useRef(0);\r\n  const arSessionRef = useRef(null);\r\n  \r\n  // Check for WebXR support on component mount\r\n  useEffect(() => {\r\n    // Check for WebXR support\r\n    if ('xr' in navigator) {\r\n      navigator.xr.isSessionSupported('immersive-ar').then((supported) => {\r\n        setIsArSupported(supported);\r\n      });\r\n    }\r\n    \r\n    // Fallback to DeviceMotion/Orientation if WebXR is not available\r\n    if (window.DeviceMotionEvent && window.DeviceOrientationEvent) {\r\n      setIsArSupported(true);\r\n    }\r\n    \r\n    // Request camera access\r\n    requestCameraAccess();\r\n    \r\n    // Request motion and orientation permissions\r\n    requestSensorPermissions();\r\n    \r\n    return () => {\r\n      if (arSessionRef.current) {\r\n        arSessionRef.current.end();\r\n      }\r\n      stopCameraStream();\r\n    };\r\n  }, []);\r\n  \r\n  // Request sensor permissions\r\n  const requestSensorPermissions = async () => {\r\n    // Request DeviceOrientation permission on iOS 13+\r\n    if (typeof DeviceOrientationEvent !== 'undefined' && \r\n        typeof DeviceOrientationEvent.requestPermission === 'function') {\r\n      try {\r\n        const permissionState = await DeviceOrientationEvent.requestPermission();\r\n        if (permissionState === 'granted') {\r\n          window.addEventListener('deviceorientation', handleOrientation);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error requesting orientation permission:\", error);\r\n      }\r\n    } else {\r\n      // Non-iOS or older iOS devices don't need explicit permission\r\n      window.addEventListener('deviceorientation', handleOrientation);\r\n    }\r\n    \r\n    // Request DeviceMotion permission on iOS 13+\r\n    if (typeof DeviceMotionEvent !== 'undefined' && \r\n        typeof DeviceMotionEvent.requestPermission === 'function') {\r\n      try {\r\n        const permissionState = await DeviceMotionEvent.requestPermission();\r\n        if (permissionState === 'granted') {\r\n          window.addEventListener('devicemotion', handleMotion);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error requesting motion permission:\", error);\r\n      }\r\n    } else {\r\n      // Non-iOS or older iOS devices don't need explicit permission\r\n      window.addEventListener('devicemotion', handleMotion);\r\n    }\r\n  };\r\n  \r\n  // Handle device orientation\r\n  const handleOrientation = (event) => {\r\n    // Update rotation reference with device orientation data\r\n    rotationRef.current = {\r\n      x: THREE.MathUtils.degToRad(event.beta || 0),  // x-axis rotation [deg]\r\n      y: THREE.MathUtils.degToRad(event.alpha || 0), // y-axis rotation [deg]\r\n      z: THREE.MathUtils.degToRad(event.gamma || 0)  // z-axis rotation [deg]\r\n    };\r\n  };\r\n  \r\n  // Handle device motion for position tracking\r\n  const handleMotion = (event) => {\r\n    if (!event.accelerationIncludingGravity) return;\r\n    \r\n    const now = performance.now();\r\n    const dt = (now - lastTimestamp.current) / 1000; // time delta in seconds\r\n    lastTimestamp.current = now;\r\n    \r\n    if (dt === 0) return; // Avoid division by zero\r\n    \r\n    // Simple high-pass filter to remove gravity and get linear acceleration\r\n    const accel = {\r\n      x: event.accelerationIncludingGravity.x - lastAcceleration.current.x,\r\n      y: event.accelerationIncludingGravity.y - lastAcceleration.current.y,\r\n      z: event.accelerationIncludingGravity.z - lastAcceleration.current.z\r\n    };\r\n    \r\n    // Apply low-pass filter to reduce noise\r\n    const alpha = 0.8;\r\n    accel.x = accel.x * alpha + lastAcceleration.current.x * (1 - alpha);\r\n    accel.y = accel.y * alpha + lastAcceleration.current.y * (1 - alpha);\r\n    accel.z = accel.z * alpha + lastAcceleration.current.z * (1 - alpha);\r\n    \r\n    // Update last acceleration values\r\n    lastAcceleration.current = { ...accel };\r\n    \r\n    // Apply a dead zone to filter out tiny movements (noise)\r\n    const deadZone = 0.1;\r\n    if (Math.abs(accel.x) < deadZone) accel.x = 0;\r\n    if (Math.abs(accel.y) < deadZone) accel.y = 0;\r\n    if (Math.abs(accel.z) < deadZone) accel.z = 0;\r\n    \r\n    // Update velocity using acceleration\r\n    velocity.current.x += accel.x * dt;\r\n    velocity.current.y += accel.y * dt;\r\n    velocity.current.z += accel.z * dt;\r\n    \r\n    // Apply damping to velocity to prevent drift\r\n    const damping = 0.95;\r\n    velocity.current.x *= damping;\r\n    velocity.current.y *= damping;\r\n    velocity.current.z *= damping;\r\n    \r\n    // Update position based on velocity\r\n    positionRef.current.x += velocity.current.x * dt * 0.1; // Scale factor to control movement speed\r\n    positionRef.current.y += velocity.current.y * dt * 0.1;\r\n    positionRef.current.z += velocity.current.z * dt * 0.1;\r\n  };\r\n  \r\n  // Start a WebXR session if available\r\n  const startARSession = async () => {\r\n    if (!navigator.xr) {\r\n      console.log(\"WebXR not supported in this browser\");\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const session = await navigator.xr.requestSession('immersive-ar', {\r\n        requiredFeatures: ['local-floor'], // Use real-world floor as reference\r\n        optionalFeatures: ['dom-overlay'],\r\n        domOverlay: { root: document.getElementById('ar-overlay') }\r\n      });\r\n      \r\n      arSessionRef.current = session;\r\n      \r\n      // Set up WebXR session\r\n      // This is a simplified version; a full implementation would need more setup\r\n      session.addEventListener('end', () => {\r\n        arSessionRef.current = null;\r\n      });\r\n      \r\n      console.log(\"WebXR AR session started\");\r\n    } catch (error) {\r\n      console.error(\"Error starting AR session:\", error);\r\n    }\r\n  };\r\n  \r\n  // Request camera access\r\n  const requestCameraAccess = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        video: { \r\n          facingMode: \"environment\", \r\n          width: { ideal: window.innerWidth },\r\n          height: { ideal: window.innerHeight }\r\n        } \r\n      });\r\n      \r\n      setVideoStream(stream);\r\n      setCameraActive(true);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera:\", error);\r\n      alert(\"Could not access the camera. Please check permissions.\");\r\n    }\r\n  };\r\n  \r\n  // Stop camera stream\r\n  const stopCameraStream = () => {\r\n    if (videoStream) {\r\n      videoStream.getTracks().forEach(track => track.stop());\r\n      setVideoStream(null);\r\n      setCameraActive(false);\r\n    }\r\n  };\r\n  \r\n  // Scene setup\r\n  useEffect(() => {\r\n    if (!cameraActive) return;\r\n    \r\n    // Scene setup\r\n    const scene = new THREE.Scene();\r\n    \r\n    const camera = new THREE.PerspectiveCamera(\r\n      75, \r\n      window.innerWidth / window.innerHeight, \r\n      0.1, \r\n      1000\r\n    );\r\n    \r\n    // Initial camera position\r\n    camera.position.set(0, 1.6, 0); // Approximate standing eye height\r\n    \r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true,\r\n      alpha: true\r\n    });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setClearColor(0x000000, 0); // Transparent background\r\n    \r\n    // Add renderer to DOM\r\n    mountRef.current.appendChild(renderer.domElement);\r\n    \r\n    // Lighting\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n    directionalLight.position.set(1, 1, 1);\r\n    scene.add(directionalLight);\r\n    \r\n    // Add ground grid for reference\r\n    const gridHelper = new THREE.GridHelper(20, 20, 0x555555, 0x333333);\r\n    gridHelper.position.y = -0.1; // Just below eye level\r\n    gridHelper.material.opacity = 0.4;\r\n    gridHelper.material.transparent = true;\r\n    scene.add(gridHelper);\r\n    \r\n    // Factory floor markers - create a more realistic factory environment\r\n    createFactoryEnvironment(scene);\r\n    \r\n    // Create sensor objects based on sampleData\r\n    const objectsInScene = [];\r\n    \r\n    sampleObjects.forEach(objectData => {\r\n      // Create sensor object\r\n      const sensorObject = createSensorObject(objectData);\r\n      scene.add(sensorObject.mesh);\r\n      objectsInScene.push(sensorObject);\r\n    });\r\n    \r\n    setObjects(objectsInScene);\r\n    \r\n    // Raycaster for object selection\r\n    const raycaster = new THREE.Raycaster();\r\n    const pointer = new THREE.Vector2();\r\n    \r\n    // Handle tap/click\r\n    const handleTap = (event) => {\r\n      // Calculate pointer position in normalized device coordinates (-1 to +1)\r\n      pointer.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n      pointer.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n      \r\n      // Update the raycaster with the camera and pointer position\r\n      raycaster.setFromCamera(pointer, camera);\r\n      \r\n      // Get list of intersected objects\r\n      const intersects = raycaster.intersectObjects(scene.children, true);\r\n      \r\n      // Check if we hit something\r\n      if (intersects.length > 0) {\r\n        // Find the sensor object from our intersected object\r\n        let found = false;\r\n        \r\n        for (let i = 0; i < intersects.length; i++) {\r\n          const intersectedObject = intersects[i].object;\r\n          \r\n          // Find the root object (the sensor)\r\n          let rootObject = intersectedObject;\r\n          while (rootObject.parent && rootObject.parent !== scene) {\r\n            rootObject = rootObject.parent;\r\n          }\r\n          \r\n          // Find this object in our list\r\n          const selectedObj = objectsInScene.find(obj => obj.mesh === rootObject);\r\n          \r\n          if (selectedObj) {\r\n            setSelectedObject(selectedObj);\r\n            setShowDataPanel(true);\r\n            found = true;\r\n            \r\n            // Hide all label sprites\r\n            objectsInScene.forEach(obj => {\r\n              if (obj.labelSprite) {\r\n                obj.labelSprite.visible = obj === selectedObj;\r\n              }\r\n            });\r\n            \r\n            break;\r\n          }\r\n        }\r\n        \r\n        // If we didn't find a sensor, hide the data panel\r\n        if (!found) {\r\n          setShowDataPanel(false);\r\n          \r\n          // Hide all label sprites\r\n          objectsInScene.forEach(obj => {\r\n            if (obj.labelSprite) {\r\n              obj.labelSprite.visible = false;\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        // Clear selection if we hit nothing\r\n        setShowDataPanel(false);\r\n        \r\n        // Hide all label sprites\r\n        objectsInScene.forEach(obj => {\r\n          if (obj.labelSprite) {\r\n            obj.labelSprite.visible = false;\r\n          }\r\n        });\r\n      }\r\n    };\r\n    \r\n    // Add event listeners\r\n    window.addEventListener('click', handleTap);\r\n    window.addEventListener('touchend', (e) => handleTap(e.changedTouches[0]));\r\n    \r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    \r\n    // Animation loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      \r\n      // Update camera rotation from device orientation\r\n      if (rotationRef.current) {\r\n        // Create a rotation quaternion from Euler angles\r\n        const quaternion = new THREE.Quaternion();\r\n        const euler = new THREE.Euler(\r\n          rotationRef.current.x,\r\n          rotationRef.current.y, \r\n          rotationRef.current.z,\r\n          'YXZ' // This order matters for mobile orientation\r\n        );\r\n        quaternion.setFromEuler(euler);\r\n        \r\n        // Apply rotation to camera\r\n        camera.quaternion.copy(quaternion);\r\n      }\r\n      \r\n      // Update camera position from estimated movement\r\n      if (positionRef.current) {\r\n        // Convert device movement to camera movement\r\n        // We need to apply camera's rotation to the movement vector\r\n        \r\n        // Create direction vector from our position reference\r\n        const movement = new THREE.Vector3(\r\n          positionRef.current.x,\r\n          positionRef.current.y,\r\n          positionRef.current.z\r\n        );\r\n        \r\n        // Apply movement based on camera's rotation\r\n        movement.applyQuaternion(camera.quaternion);\r\n        \r\n        // Update camera position\r\n        camera.position.add(movement);\r\n      }\r\n      \r\n      // Update all objects\r\n      objectsInScene.forEach(obj => {\r\n        // Make labels always face the camera\r\n        if (obj.labelSprite) {\r\n          obj.labelSprite.lookAt(camera.position);\r\n        }\r\n        \r\n        // Update pulse animations\r\n        if (obj.pulse) {\r\n          const pulse = obj.pulse;\r\n          const pulseData = pulse.userData;\r\n          \r\n          // Update scale based on pulse direction\r\n          if (pulseData.pulseDirection === 1) {\r\n            pulse.scale.x += pulseData.pulseSpeed;\r\n            pulse.scale.y += pulseData.pulseSpeed;\r\n            pulse.scale.z += pulseData.pulseSpeed;\r\n            \r\n            if (pulse.scale.x >= pulseData.maxScale) {\r\n              pulseData.pulseDirection = -1;\r\n            }\r\n          } else {\r\n            pulse.scale.x -= pulseData.pulseSpeed;\r\n            pulse.scale.y -= pulseData.pulseSpeed;\r\n            pulse.scale.z -= pulseData.pulseSpeed;\r\n            \r\n            if (pulse.scale.x <= pulseData.minScale) {\r\n              pulseData.pulseDirection = 1;\r\n            }\r\n          }\r\n          \r\n          // Update opacity\r\n          pulse.material.opacity = 0.5 - ((pulse.scale.x - pulseData.minScale) / \r\n            (pulseData.maxScale - pulseData.minScale)) * 0.4;\r\n        }\r\n        \r\n        // Rotate status indicators\r\n        if (obj.statusIndicator) {\r\n          obj.statusIndicator.rotation.y += 0.01;\r\n        }\r\n      });\r\n      \r\n      // Render the scene\r\n      renderer.render(scene, camera);\r\n    };\r\n    \r\n    // Start animation loop\r\n    const animationId = requestAnimationFrame(animate);\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      cancelAnimationFrame(animationId);\r\n      window.removeEventListener('click', handleTap);\r\n      window.removeEventListener('touchend', handleTap);\r\n      window.removeEventListener('resize', handleResize);\r\n      \r\n      // Clean up Three.js resources\r\n      scene.traverse((object) => {\r\n        if (object.geometry) object.geometry.dispose();\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n      \r\n      if (mountRef.current && mountRef.current.contains(renderer.domElement)) {\r\n        mountRef.current.removeChild(renderer.domElement);\r\n      }\r\n      \r\n      // Remove event listeners\r\n      window.removeEventListener('deviceorientation', handleOrientation);\r\n      window.removeEventListener('devicemotion', handleMotion);\r\n    };\r\n  }, [cameraActive]);\r\n  \r\n  // Create a sensor visualization object\r\n  const createSensorObject = (sensorData) => {\r\n    // Main group for the sensor\r\n    const sensorGroup = new THREE.Group();\r\n    \r\n    // Create the main sensor body\r\n    const geometry = new THREE.SphereGeometry(0.2, 32, 32);\r\n    const material = new THREE.MeshStandardMaterial({ \r\n      color: sensorData.color,\r\n      emissive: sensorData.color,\r\n      emissiveIntensity: 0.4,\r\n      roughness: 0.3,\r\n      metalness: 0.8\r\n    });\r\n    const sensorMesh = new THREE.Mesh(geometry, material);\r\n    \r\n    // Position the sensor at its specified location\r\n    sensorMesh.position.set(\r\n      sensorData.position.x,\r\n      sensorData.position.y,\r\n      sensorData.position.z\r\n    );\r\n    \r\n    // Add the sensor to the group\r\n    sensorGroup.add(sensorMesh);\r\n    \r\n    // Add pulse effect\r\n    const pulseGeometry = new THREE.SphereGeometry(0.25, 32, 32);\r\n    const pulseMaterial = new THREE.MeshBasicMaterial({\r\n      color: sensorData.color,\r\n      transparent: true,\r\n      opacity: 0.4\r\n    });\r\n    const pulse = new THREE.Mesh(pulseGeometry, pulseMaterial);\r\n    \r\n    // Configure pulse based on sensor status\r\n    let pulseSpeed = 0.01;\r\n    let maxScale = 1.5;\r\n    \r\n    switch(sensorData.status) {\r\n      case \"Critical\":\r\n        pulseSpeed = 0.03;\r\n        maxScale = 2.0;\r\n        break;\r\n      case \"Warning\":\r\n        pulseSpeed = 0.02;\r\n        maxScale = 1.8;\r\n        break;\r\n      case \"Offline\":\r\n        pulseSpeed = 0.005;\r\n        maxScale = 1.2;\r\n        break;\r\n      default: // Active\r\n        pulseSpeed = 0.01;\r\n        maxScale = 1.5;\r\n    }\r\n    \r\n    pulse.userData = { \r\n      pulseDirection: 1, \r\n      minScale: 1, \r\n      maxScale: maxScale,\r\n      pulseSpeed: pulseSpeed\r\n    };\r\n    \r\n    sensorMesh.add(pulse);\r\n    \r\n    // Add status indicator\r\n    const statusGeometry = new THREE.BoxGeometry(0.05, 0.05, 0.05);\r\n    const statusColor = getStatusColor(sensorData.status);\r\n    const statusMaterial = new THREE.MeshBasicMaterial({ color: statusColor });\r\n    const statusIndicator = new THREE.Mesh(statusGeometry, statusMaterial);\r\n    statusIndicator.position.set(0, 0.3, 0);\r\n    sensorMesh.add(statusIndicator);\r\n    \r\n    // Create a text sprite for the label\r\n    const labelSprite = createLabelSprite(sensorData.name, sensorData.status);\r\n    labelSprite.position.set(0, 0.5, 0);\r\n    labelSprite.visible = false; // Hidden by default\r\n    sensorMesh.add(labelSprite);\r\n    \r\n    // Add an optional cable/pipe connecting to the ground\r\n    if (sensorData.position.y > 0.3) {\r\n      const cableGeometry = new THREE.CylinderGeometry(0.02, 0.02, sensorData.position.y, 8);\r\n      const cableMaterial = new THREE.MeshStandardMaterial({\r\n        color: 0x444444,\r\n        roughness: 0.8,\r\n        metalness: 0.3\r\n      });\r\n      const cable = new THREE.Mesh(cableGeometry, cableMaterial);\r\n      cable.position.set(0, -sensorData.position.y/2, 0);\r\n      sensorMesh.add(cable);\r\n    }\r\n    \r\n    return {\r\n      mesh: sensorGroup,\r\n      data: sensorData,\r\n      pulse: pulse,\r\n      statusIndicator: statusIndicator,\r\n      labelSprite: labelSprite\r\n    };\r\n  };\r\n  \r\n  // Create a label sprite with status indicator\r\n  const createLabelSprite = (name, status) => {\r\n    // Create canvas for the sprite texture\r\n    const canvas = document.createElement('canvas');\r\n    const context = canvas.getContext('2d');\r\n    canvas.width = 256;\r\n    canvas.height = 128;\r\n    \r\n    // Colors based on status\r\n    let statusColor;\r\n    switch(status) {\r\n      case \"Critical\": statusColor = \"#e74c3c\"; break;\r\n      case \"Warning\": statusColor = \"#f39c12\"; break;\r\n      case \"Offline\": statusColor = \"#7f8c8d\"; break;\r\n      default: statusColor = \"#2ecc71\"; // Active\r\n    }\r\n    \r\n    // Background with rounded corners\r\n    context.fillStyle = 'rgba(25, 28, 36, 0.85)';\r\n    context.strokeStyle = statusColor;\r\n    context.lineWidth = 3;\r\n    \r\n    const rectWidth = 210;\r\n    const rectHeight = 50;\r\n    const cornerRadius = 8;\r\n    \r\n    // Draw rounded rectangle\r\n    context.beginPath();\r\n    context.moveTo(20 + cornerRadius, 10);\r\n    context.lineTo(20 + rectWidth - cornerRadius, 10);\r\n    context.quadraticCurveTo(20 + rectWidth, 10, 20 + rectWidth, 10 + cornerRadius);\r\n    context.lineTo(20 + rectWidth, 10 + rectHeight - cornerRadius);\r\n    context.quadraticCurveTo(20 + rectWidth, 10 + rectHeight, 20 + rectWidth - cornerRadius, 10 + rectHeight);\r\n    context.lineTo(20 + cornerRadius, 10 + rectHeight);\r\n    context.quadraticCurveTo(20, 10 + rectHeight, 20, 10 + rectHeight - cornerRadius);\r\n    context.lineTo(20, 10 + cornerRadius);\r\n    context.quadraticCurveTo(20, 10, 20 + cornerRadius, 10);\r\n    context.closePath();\r\n    \r\n    // Fill and stroke\r\n    context.fill();\r\n    context.stroke();\r\n    \r\n    // Add status indicator\r\n    context.fillStyle = statusColor;\r\n    context.beginPath();\r\n    context.arc(35, 35, 6, 0, Math.PI * 2);\r\n    context.fill();\r\n    \r\n    // Add text\r\n    context.font = 'bold 20px Arial';\r\n    context.fillStyle = 'white';\r\n    context.textAlign = 'left';\r\n    context.textBaseline = 'middle';\r\n    context.fillText(name, 50, 35);\r\n    \r\n    // Create sprite from texture\r\n    const texture = new THREE.CanvasTexture(canvas);\r\n    const spriteMaterial = new THREE.SpriteMaterial({ \r\n      map: texture,\r\n      transparent: true\r\n    });\r\n    \r\n    const sprite = new THREE.Sprite(spriteMaterial);\r\n    sprite.scale.set(1.0, 0.5, 1);\r\n    \r\n    return sprite;\r\n  };\r\n  \r\n  // Create a factory environment with visual markers\r\n  const createFactoryEnvironment = (scene) => {\r\n    // Add walls to create a factory-like space\r\n    const wallMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x888888,\r\n      roughness: 0.8,\r\n      metalness: 0.2\r\n    });\r\n    \r\n    // Floor\r\n    const floorGeometry = new THREE.PlaneGeometry(20, 20);\r\n    const floorMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x666666,\r\n      roughness: 0.9,\r\n      metalness: 0.1\r\n    });\r\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial);\r\n    floor.rotation.x = -Math.PI / 2;\r\n    floor.position.y = -0.1;\r\n    scene.add(floor);\r\n    \r\n    // Add some factory equipment (simplified shapes)\r\n    \r\n    // Machine 1 - Box shape\r\n    const machine1Geometry = new THREE.BoxGeometry(1.5, 1.2, 0.8);\r\n    const machine1Material = new THREE.MeshStandardMaterial({\r\n      color: 0x3498db,\r\n      roughness: 0.7,\r\n      metalness: 0.3\r\n    });\r\n    const machine1 = new THREE.Mesh(machine1Geometry, machine1Material);\r\n    machine1.position.set(-3, 0.6, -2);\r\n    scene.add(machine1);\r\n    \r\n    // Machine 2 - Cylinder shape\r\n    const machine2Geometry = new THREE.CylinderGeometry(0.5, 0.5, 1.5, 16);\r\n    const machine2Material = new THREE.MeshStandardMaterial({\r\n      color: 0xe74c3c,\r\n      roughness: 0.6,\r\n      metalness: 0.4\r\n    });\r\n    const machine2 = new THREE.Mesh(machine2Geometry, machine2Material);\r\n    machine2.position.set(3, 0.75, -1);\r\n    scene.add(machine2);\r\n    \r\n    // Workbench\r\n    const workbenchGeometry = new THREE.BoxGeometry(2, 0.1, 1);\r\n    const workbenchLegsGeometry = new THREE.BoxGeometry(0.1, 0.7, 0.1);\r\n    const workbenchMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x795548,\r\n      roughness: 0.9,\r\n      metalness: 0.1\r\n    });\r\n    \r\n    const workbenchGroup = new THREE.Group();\r\n    \r\n    const workbenchTop = new THREE.Mesh(workbenchGeometry, workbenchMaterial);\r\n    workbenchTop.position.set(0, 0.7, 0);\r\n    workbenchGroup.add(workbenchTop);\r\n    \r\n    // Add legs\r\n    const leg1 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\r\n    leg1.position.set(-0.9, 0.35, -0.4);\r\n    workbenchGroup.add(leg1);\r\n    \r\n    const leg2 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\r\n    leg2.position.set(-0.9, 0.35, 0.4);\r\n    workbenchGroup.add(leg2);\r\n    \r\n    const leg3 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\r\n    leg3.position.set(0.9, 0.35, -0.4);\r\n    workbenchGroup.add(leg3);\r\n    \r\n    const leg4 = new THREE.Mesh(workbenchLegsGeometry, workbenchMaterial);\r\n    leg4.position.set(0.9, 0.35, 0.4);\r\n    workbenchGroup.add(leg4);\r\n    \r\n    workbenchGroup.position.set(0, 0, 2);\r\n    scene.add(workbenchGroup);\r\n    \r\n    // Add safety/zone markings on floor\r\n    const createFloorMarking = (width, depth, color, position) => {\r\n      const markingGeometry = new THREE.PlaneGeometry(width, depth);\r\n      const markingMaterial = new THREE.MeshBasicMaterial({\r\n        color: color,\r\n        transparent: true,\r\n        opacity: 0.7,\r\n        side: THREE.DoubleSide\r\n      });\r\n      const marking = new THREE.Mesh(markingGeometry, markingMaterial);\r\n      marking.rotation.x = -Math.PI / 2;\r\n      marking.position.set(position.x, 0.01, position.z); // Slightly above floor\r\n      scene.add(marking);\r\n    };\r\n    \r\n    // Add zone markings\r\n    createFloorMarking(2, 2, 0xf1c40f, { x: -3, z: -2 }); // Yellow zone around machine 1\r\n    createFloorMarking(1.5, 1.5, 0xe74c3c, { x: 3, z: -1 }); // Red zone around machine 2\r\n    createFloorMarking(2.5, 1.5, 0x2ecc71, { x: 0, z: 2 }); // Green zone around workbench\r\n    \r\n    // Add some pipes along walls or ceiling\r\n    const createPipe = (start, end, radius, color) => {\r\n      // Calculate pipe length and orientation\r\n      const direction = new THREE.Vector3().subVectors(end, start);\r\n      const length = direction.length();\r\n      \r\n      // Create pipe geometry\r\n      const pipeGeometry = new THREE.CylinderGeometry(radius, radius, length, 8);\r\n      const pipeMaterial = new THREE.MeshStandardMaterial({\r\n        color: color,\r\n        roughness: 0.7,\r\n        metalness: 0.3\r\n      });\r\n      \r\n      // Position and orient the pipe\r\n      const pipe = new THREE.Mesh(pipeGeometry, pipeMaterial);\r\n      \r\n      // Position at midpoint\r\n      pipe.position.copy(start).add(direction.multiplyScalar(0.5));\r\n      \r\n      // Orient along direction\r\n      pipe.quaternion.setFromUnitVectors(\r\n        new THREE.Vector3(0, 1, 0), // Default cylinder orientation is along Y\r\n        direction.clone().normalize()\r\n      );\r\n      \r\n      scene.add(pipe);\r\n    };\r\n    \r\n    // Add some pipes\r\n    createPipe(\r\n      new THREE.Vector3(-4, 2, -3),\r\n      new THREE.Vector3(4, 2, -3),\r\n      0.05,\r\n      0x3498db\r\n    ); // Blue pipe\r\n    \r\n    createPipe(\r\n      new THREE.Vector3(-4, 2, 3),\r\n      new THREE.Vector3(4, 2, 3),\r\n      0.05,\r\n      0xe74c3c\r\n    ); // Red pipe\r\n    \r\n    createPipe(\r\n      new THREE.Vector3(-4, 2, -3),\r\n      new THREE.Vector3(-4, 2, 3),\r\n      0.05, \r\n      0x2ecc71\r\n    ); // Green pipe\r\n    \r\n    return {\r\n      floor,\r\n      machine1,\r\n      machine2,\r\n      workbenchGroup\r\n    };\r\n  };\r\n  \r\n  // Helper function to get status color\r\n  const getStatusColor = (status) => {\r\n    switch(status) {\r\n      case \"Critical\": return 0xff0000;\r\n      case \"Warning\": return 0xffcc00;\r\n      case \"Offline\": return 0x888888;\r\n      default: return 0x00ff00; // Active\r\n    }\r\n  };\r\n  \r\n  // Format date string nicely\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString();\r\n  };\r\n  \r\n  // Get status indicator class\r\n  const getStatusClass = (status) => {\r\n    switch(status) {\r\n      case \"Critical\": return \"status-critical\";\r\n      case \"Warning\": return \"status-warning\";\r\n      case \"Offline\": return \"status-offline\";\r\n      default: return \"status-active\";\r\n    }\r\n  };\r\n  \r\n  // Reset position tracking\r\n  const resetTracking = () => {\r\n    positionRef.current = { x: 0, y: 0, z: 0 };\r\n    velocity.current = { x: 0, y: 0, z: 0 };\r\n    lastAcceleration.current = { x: 0, y: 0, z: 0 };\r\n  };\r\n  \r\n  // Render data panel for selected sensor\r\n  const renderDataPanel = () => {\r\n    if (!selectedObject || !showDataPanel) return null;\r\n    \r\n    const { data } = selectedObject;\r\n    const statusClass = getStatusClass(data.status);\r\n    \r\n    return (\r\n      <div className=\"data-panel card-ui\">\r\n        <div className=\"panel-header\" style={{ backgroundColor: `#${data.color.toString(16)}` }}>\r\n          <div className=\"header-content\">\r\n            <div className={`status-indicator ${statusClass}`}></div>\r\n            <h3>{data.name}</h3>\r\n          </div>\r\n          <button className=\"close-button\" onClick={() => setShowDataPanel(false)}>×</button>\r\n        </div>\r\n        \r\n        <div className=\"panel-content\">\r\n          <div className=\"data-grid\">\r\n            <div className=\"data-section location-section\">\r\n              <h4>Location</h4>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">X:</span>\r\n                  <span className=\"data-value\">{data.position.x.toFixed(2)} m</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Y:</span>\r\n                  <span className=\"data-value\">{data.position.y.toFixed(2)} m</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Z:</span>\r\n                  <span className=\"data-value\">{data.position.z.toFixed(2)} m</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-section properties-section\">\r\n              <h4>Properties</h4>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Type:</span>\r\n                  <span className=\"data-value\">{data.type}</span>\r\n                </div>\r\n                <div className=\"data-grid-cell\">\r\n                  <span className=\"data-label\">Status:</span>\r\n                  <span className={`data-value ${statusClass}`}>{data.status}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell full-width\">\r\n                  <span className=\"data-label\">Last Updated:</span>\r\n                  <span className=\"data-value\">{formatDate(data.lastUpdated)}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"data-grid-row\">\r\n                <div className=\"data-grid-cell full-width\">\r\n                  <span className=\"data-label\">Description:</span>\r\n                  <span className=\"data-value description\">{data.description}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"data-section readings-section\">\r\n              <h4>Recent Readings</h4>\r\n              <div className=\"mini-chart\">\r\n                {data.readings.map((value, index) => (\r\n                  <div \r\n                    key={index} \r\n                    className=\"chart-bar\"\r\n                    style={{ \r\n                      height: `${value}%`,\r\n                      backgroundColor: index === data.readings.length - 1 ? \r\n                        `#${data.color.toString(16)}` : '#3498db'\r\n                    }}\r\n                  >\r\n                    <span className=\"tooltip\">{value}</span>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"chart-legend\">\r\n                <span>Past</span>\r\n                <span>Present</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"action-buttons\">\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-details\"></i>\r\n              <span>Details</span>\r\n            </button>\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-history\"></i>\r\n              <span>History</span>\r\n            </button>\r\n            <button className=\"action-button\">\r\n              <i className=\"icon-share\"></i>\r\n              <span>Share</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render status bar\r\n  const renderStatusBar = () => {\r\n    if (!objects.length) return null;\r\n    \r\n    const activeObjects = objects.filter(obj => obj.data.status === \"Active\").length;\r\n    const warningObjects = objects.filter(obj => obj.data.status === \"Warning\").length;\r\n    const criticalObjects = objects.filter(obj => obj.data.status === \"Critical\").length;\r\n    \r\n    return (\r\n      <div className=\"status-bar card-ui\">\r\n        <div className=\"status-content\">\r\n          <div className=\"object-count\">\r\n            <span className=\"count-number\">{objects.length}</span>\r\n            <span className=\"count-label\">Sensors</span>\r\n          </div>\r\n          <div className=\"status-indicators\">\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-active\"></div>\r\n              <span>{activeObjects}</span>\r\n            </div>\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-warning\"></div>\r\n              <span>{warningObjects}</span>\r\n            </div>\r\n            <div className=\"status-group\">\r\n              <div className=\"status-dot status-critical\"></div>\r\n              <span>{criticalObjects}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render compass for orientation\r\n  const renderCompass = () => {\r\n    return (\r\n      <div className=\"compass-container card-ui\">\r\n        <div className=\"compass\">\r\n          <div className=\"compass-north\">N</div>\r\n          <div className=\"compass-east\">E</div>\r\n          <div className=\"compass-south\">S</div>\r\n          <div className=\"compass-west\">W</div>\r\n          <div className=\"compass-needle\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render control buttons\r\n  const renderControls = () => {\r\n    return (\r\n      <div className=\"controls-container card-ui\">\r\n        <button \r\n          className=\"control-button\" \r\n          onClick={resetTracking}\r\n          title=\"Reset Tracking\"\r\n        >\r\n          <i className=\"icon-reset\"></i>\r\n        </button>\r\n        <button \r\n          className=\"control-button\" \r\n          onClick={() => setShowDataPanel(false)}\r\n          title=\"Close All Panels\"\r\n        >\r\n          <i className=\"icon-close-all\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Render AR permissions view\r\n  const renderPermissionsView = () => {\r\n    if (cameraActive) return null;\r\n    \r\n    return (\r\n      <div className=\"permissions-view\">\r\n        <div className=\"permissions-card card-ui\">\r\n          <h2>AR Factory Visualizer</h2>\r\n          <p>This application uses augmented reality to visualize and interact with sensors and equipment in your factory space.</p>\r\n          \r\n          <div className=\"permissions-item\">\r\n            <div className=\"permission-icon camera-icon\">📷</div>\r\n            <div className=\"permission-info\">\r\n              <h3>Camera Access</h3>\r\n              <p>Required to display virtual objects in your real environment</p>\r\n              <button className=\"permission-button\" onClick={requestCameraAccess}>\r\n                Grant Camera Access\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"permissions-item\">\r\n            <div className=\"permission-icon motion-icon\">📱</div>\r\n            <div className=\"permission-info\">\r\n              <h3>Motion Sensors</h3>\r\n              <p>Required to track your position in the factory</p>\r\n              <button className=\"permission-button\" onClick={requestSensorPermissions}>\r\n                Grant Motion Access\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"permissions-note\">\r\n            <p><strong>Note:</strong> For the best experience, please hold your device upright and move slowly through your space.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Main render function\r\n  return (\r\n    <div className=\"ar-container\">\r\n      {/* Camera feed for AR background */}\r\n      {cameraActive && (\r\n        <video \r\n          ref={videoRef}\r\n          className=\"camera-feed\"\r\n          autoPlay\r\n          playsInline\r\n          muted\r\n        />\r\n      )}\r\n      \r\n      {/* Three.js scene */}\r\n      <div ref={mountRef} className=\"ar-scene\"></div>\r\n      \r\n      {/* AR Overlay - this div is used for WebXR DOM overlay */}\r\n      <div id=\"ar-overlay\" className=\"ar-overlay\">\r\n        {/* UI Components */}\r\n        <div className=\"ui-layer\">\r\n          {renderDataPanel()}\r\n          {renderStatusBar()}\r\n          {renderCompass()}\r\n          {renderControls()}\r\n          \r\n          {/* Instructions overlay */}\r\n          {cameraActive && (\r\n            <div className=\"instructions card-ui\">\r\n              <p>Walk around to explore the factory. Tap on sensors to view details.</p>\r\n              <button className=\"dismiss-button\">✕</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Permissions view */}\r\n      {renderPermissionsView()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImprovedARVisualizer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}